// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AzureConnectorCreateRequest AzureConnectorCreateRequest
//
// swagger:model AzureConnectorCreateRequest
type AzureConnectorCreateRequest struct {

	// application Id
	ApplicationID string `json:"applicationId,omitempty"`

	// authentication key
	AuthenticationKey string `json:"authenticationKey,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// directory Id
	DirectoryID string `json:"directoryId,omitempty"`

	// is gov cloud
	IsGovCloud bool `json:"isGovCloud,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// polling frequency
	PollingFrequency *RunFrequency `json:"pollingFrequency,omitempty"`

	// remediation enabled
	RemediationEnabled bool `json:"remediationEnabled,omitempty"`

	// subscription Id
	SubscriptionID string `json:"subscriptionId,omitempty"`
}

// Validate validates this azure connector create request
func (m *AzureConnectorCreateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePollingFrequency(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureConnectorCreateRequest) validatePollingFrequency(formats strfmt.Registry) error {

	if swag.IsZero(m.PollingFrequency) { // not required
		return nil
	}

	if m.PollingFrequency != nil {
		if err := m.PollingFrequency.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pollingFrequency")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AzureConnectorCreateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureConnectorCreateRequest) UnmarshalBinary(b []byte) error {
	var res AzureConnectorCreateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
