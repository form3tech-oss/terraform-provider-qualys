// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ActionRequest ActionRequest
//
// swagger:model ActionRequest
type ActionRequest struct {

	// action Id
	ActionID string `json:"actionId,omitempty"`

	// action type
	// Enum: [qemail slack pagerduty]
	ActionType string `json:"actionType,omitempty"`

	// email recipients
	EmailRecipients []string `json:"emailRecipients"`

	// email subject
	EmailSubject string `json:"emailSubject,omitempty"`

	// pager subject line
	PagerSubjectLine string `json:"pagerSubjectLine,omitempty"`

	// slack channel
	SlackChannel string `json:"slackChannel,omitempty"`
}

// Validate validates this action request
func (m *ActionRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActionType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var actionRequestTypeActionTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["qemail","slack","pagerduty"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		actionRequestTypeActionTypePropEnum = append(actionRequestTypeActionTypePropEnum, v)
	}
}

const (

	// ActionRequestActionTypeQemail captures enum value "qemail"
	ActionRequestActionTypeQemail string = "qemail"

	// ActionRequestActionTypeSlack captures enum value "slack"
	ActionRequestActionTypeSlack string = "slack"

	// ActionRequestActionTypePagerduty captures enum value "pagerduty"
	ActionRequestActionTypePagerduty string = "pagerduty"
)

// prop value enum
func (m *ActionRequest) validateActionTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, actionRequestTypeActionTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ActionRequest) validateActionType(formats strfmt.Registry) error {

	if swag.IsZero(m.ActionType) { // not required
		return nil
	}

	// value enum
	if err := m.validateActionTypeEnum("actionType", "body", m.ActionType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ActionRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ActionRequest) UnmarshalBinary(b []byte) error {
	var res ActionRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
