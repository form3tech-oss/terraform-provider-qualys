// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureConnectorResponse AzureConnectorResponse
//
// swagger:model AzureConnectorResponse
type AzureConnectorResponse struct {

	// application Id
	ApplicationID string `json:"applicationId,omitempty"`

	// connector Id
	// Format: uuid
	ConnectorID strfmt.UUID `json:"connectorId,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// directory Id
	DirectoryID string `json:"directoryId,omitempty"`

	// error
	Error string `json:"error,omitempty"`

	// groups
	Groups []*Group `json:"groups"`

	// is disabled
	IsDisabled bool `json:"isDisabled,omitempty"`

	// is gov cloud
	IsGovCloud bool `json:"isGovCloud,omitempty"`

	// last synced on
	LastSyncedOn string `json:"lastSyncedOn,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// next synced on
	NextSyncedOn string `json:"nextSyncedOn,omitempty"`

	// polling frequency
	PollingFrequency *RunFrequency `json:"pollingFrequency,omitempty"`

	// provider
	// Enum: [AZURE]
	Provider string `json:"provider,omitempty"`

	// remediation enabled
	RemediationEnabled bool `json:"remediationEnabled,omitempty"`

	// state
	State string `json:"state,omitempty"`

	// subscription Id
	SubscriptionID string `json:"subscriptionId,omitempty"`

	// subscription name
	SubscriptionName string `json:"subscriptionName,omitempty"`

	// total assets
	TotalAssets int32 `json:"totalAssets,omitempty"`
}

// Validate validates this azure connector response
func (m *AzureConnectorResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConnectorID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGroups(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePollingFrequency(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProvider(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureConnectorResponse) validateConnectorID(formats strfmt.Registry) error {

	if swag.IsZero(m.ConnectorID) { // not required
		return nil
	}

	if err := validate.FormatOf("connectorId", "body", "uuid", m.ConnectorID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AzureConnectorResponse) validateGroups(formats strfmt.Registry) error {

	if swag.IsZero(m.Groups) { // not required
		return nil
	}

	for i := 0; i < len(m.Groups); i++ {
		if swag.IsZero(m.Groups[i]) { // not required
			continue
		}

		if m.Groups[i] != nil {
			if err := m.Groups[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("groups" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AzureConnectorResponse) validatePollingFrequency(formats strfmt.Registry) error {

	if swag.IsZero(m.PollingFrequency) { // not required
		return nil
	}

	if m.PollingFrequency != nil {
		if err := m.PollingFrequency.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pollingFrequency")
			}
			return err
		}
	}

	return nil
}

var azureConnectorResponseTypeProviderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AZURE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		azureConnectorResponseTypeProviderPropEnum = append(azureConnectorResponseTypeProviderPropEnum, v)
	}
}

const (

	// AzureConnectorResponseProviderAZURE captures enum value "AZURE"
	AzureConnectorResponseProviderAZURE string = "AZURE"
)

// prop value enum
func (m *AzureConnectorResponse) validateProviderEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, azureConnectorResponseTypeProviderPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AzureConnectorResponse) validateProvider(formats strfmt.Registry) error {

	if swag.IsZero(m.Provider) { // not required
		return nil
	}

	// value enum
	if err := m.validateProviderEnum("provider", "body", m.Provider); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AzureConnectorResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureConnectorResponse) UnmarshalBinary(b []byte) error {
	var res AzureConnectorResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
