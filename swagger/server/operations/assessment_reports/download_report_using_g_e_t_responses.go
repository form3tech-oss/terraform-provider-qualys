/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package assessment_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// DownloadReportUsingGETOKCode is the HTTP code returned for type DownloadReportUsingGETOK
const DownloadReportUsingGETOKCode int = 200

/*DownloadReportUsingGETOK OK

swagger:response downloadReportUsingGETOK
*/
type DownloadReportUsingGETOK struct {

	/*
	  In: Body
	*/
	Payload *models.Resource `json:"body,omitempty"`
}

// NewDownloadReportUsingGETOK creates DownloadReportUsingGETOK with default headers values
func NewDownloadReportUsingGETOK() *DownloadReportUsingGETOK {

	return &DownloadReportUsingGETOK{}
}

// WithPayload adds the payload to the download report using g e t o k response
func (o *DownloadReportUsingGETOK) WithPayload(payload *models.Resource) *DownloadReportUsingGETOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download report using g e t o k response
func (o *DownloadReportUsingGETOK) SetPayload(payload *models.Resource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadReportUsingGETOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadReportUsingGETBadRequestCode is the HTTP code returned for type DownloadReportUsingGETBadRequest
const DownloadReportUsingGETBadRequestCode int = 400

/*DownloadReportUsingGETBadRequest Bad Request

swagger:response downloadReportUsingGETBadRequest
*/
type DownloadReportUsingGETBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewDownloadReportUsingGETBadRequest creates DownloadReportUsingGETBadRequest with default headers values
func NewDownloadReportUsingGETBadRequest() *DownloadReportUsingGETBadRequest {

	return &DownloadReportUsingGETBadRequest{}
}

// WithPayload adds the payload to the download report using g e t bad request response
func (o *DownloadReportUsingGETBadRequest) WithPayload(payload *models.APIErrorFacade) *DownloadReportUsingGETBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download report using g e t bad request response
func (o *DownloadReportUsingGETBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadReportUsingGETBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadReportUsingGETUnauthorizedCode is the HTTP code returned for type DownloadReportUsingGETUnauthorized
const DownloadReportUsingGETUnauthorizedCode int = 401

/*DownloadReportUsingGETUnauthorized Unauthorized user

swagger:response downloadReportUsingGETUnauthorized
*/
type DownloadReportUsingGETUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewDownloadReportUsingGETUnauthorized creates DownloadReportUsingGETUnauthorized with default headers values
func NewDownloadReportUsingGETUnauthorized() *DownloadReportUsingGETUnauthorized {

	return &DownloadReportUsingGETUnauthorized{}
}

// WithPayload adds the payload to the download report using g e t unauthorized response
func (o *DownloadReportUsingGETUnauthorized) WithPayload(payload *models.APIErrorFacade) *DownloadReportUsingGETUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the download report using g e t unauthorized response
func (o *DownloadReportUsingGETUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DownloadReportUsingGETUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DownloadReportUsingGETForbiddenCode is the HTTP code returned for type DownloadReportUsingGETForbidden
const DownloadReportUsingGETForbiddenCode int = 403

/*DownloadReportUsingGETForbidden Forbidden

swagger:response downloadReportUsingGETForbidden
*/
type DownloadReportUsingGETForbidden struct {
}

// NewDownloadReportUsingGETForbidden creates DownloadReportUsingGETForbidden with default headers values
func NewDownloadReportUsingGETForbidden() *DownloadReportUsingGETForbidden {

	return &DownloadReportUsingGETForbidden{}
}

// WriteResponse to the client
func (o *DownloadReportUsingGETForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// DownloadReportUsingGETNotFoundCode is the HTTP code returned for type DownloadReportUsingGETNotFound
const DownloadReportUsingGETNotFoundCode int = 404

/*DownloadReportUsingGETNotFound Not Found

swagger:response downloadReportUsingGETNotFound
*/
type DownloadReportUsingGETNotFound struct {
}

// NewDownloadReportUsingGETNotFound creates DownloadReportUsingGETNotFound with default headers values
func NewDownloadReportUsingGETNotFound() *DownloadReportUsingGETNotFound {

	return &DownloadReportUsingGETNotFound{}
}

// WriteResponse to the client
func (o *DownloadReportUsingGETNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
