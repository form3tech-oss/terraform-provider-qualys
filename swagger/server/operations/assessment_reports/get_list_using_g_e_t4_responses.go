/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package assessment_reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// GetListUsingGET4OKCode is the HTTP code returned for type GetListUsingGET4OK
const GetListUsingGET4OKCode int = 200

/*GetListUsingGET4OK OK

swagger:response getListUsingGET4OK
*/
type GetListUsingGET4OK struct {

	/*
	  In: Body
	*/
	Payload *models.PivotListResponseReportServiceResponse `json:"body,omitempty"`
}

// NewGetListUsingGET4OK creates GetListUsingGET4OK with default headers values
func NewGetListUsingGET4OK() *GetListUsingGET4OK {

	return &GetListUsingGET4OK{}
}

// WithPayload adds the payload to the get list using g e t4 o k response
func (o *GetListUsingGET4OK) WithPayload(payload *models.PivotListResponseReportServiceResponse) *GetListUsingGET4OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get list using g e t4 o k response
func (o *GetListUsingGET4OK) SetPayload(payload *models.PivotListResponseReportServiceResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetListUsingGET4OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetListUsingGET4BadRequestCode is the HTTP code returned for type GetListUsingGET4BadRequest
const GetListUsingGET4BadRequestCode int = 400

/*GetListUsingGET4BadRequest Bad Request

swagger:response getListUsingGET4BadRequest
*/
type GetListUsingGET4BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetListUsingGET4BadRequest creates GetListUsingGET4BadRequest with default headers values
func NewGetListUsingGET4BadRequest() *GetListUsingGET4BadRequest {

	return &GetListUsingGET4BadRequest{}
}

// WithPayload adds the payload to the get list using g e t4 bad request response
func (o *GetListUsingGET4BadRequest) WithPayload(payload *models.APIErrorFacade) *GetListUsingGET4BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get list using g e t4 bad request response
func (o *GetListUsingGET4BadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetListUsingGET4BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetListUsingGET4UnauthorizedCode is the HTTP code returned for type GetListUsingGET4Unauthorized
const GetListUsingGET4UnauthorizedCode int = 401

/*GetListUsingGET4Unauthorized Unauthorized user

swagger:response getListUsingGET4Unauthorized
*/
type GetListUsingGET4Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetListUsingGET4Unauthorized creates GetListUsingGET4Unauthorized with default headers values
func NewGetListUsingGET4Unauthorized() *GetListUsingGET4Unauthorized {

	return &GetListUsingGET4Unauthorized{}
}

// WithPayload adds the payload to the get list using g e t4 unauthorized response
func (o *GetListUsingGET4Unauthorized) WithPayload(payload *models.APIErrorFacade) *GetListUsingGET4Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get list using g e t4 unauthorized response
func (o *GetListUsingGET4Unauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetListUsingGET4Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetListUsingGET4ForbiddenCode is the HTTP code returned for type GetListUsingGET4Forbidden
const GetListUsingGET4ForbiddenCode int = 403

/*GetListUsingGET4Forbidden Forbidden

swagger:response getListUsingGET4Forbidden
*/
type GetListUsingGET4Forbidden struct {
}

// NewGetListUsingGET4Forbidden creates GetListUsingGET4Forbidden with default headers values
func NewGetListUsingGET4Forbidden() *GetListUsingGET4Forbidden {

	return &GetListUsingGET4Forbidden{}
}

// WriteResponse to the client
func (o *GetListUsingGET4Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetListUsingGET4NotFoundCode is the HTTP code returned for type GetListUsingGET4NotFound
const GetListUsingGET4NotFoundCode int = 404

/*GetListUsingGET4NotFound Not Found

swagger:response getListUsingGET4NotFound
*/
type GetListUsingGET4NotFound struct {
}

// NewGetListUsingGET4NotFound creates GetListUsingGET4NotFound with default headers values
func NewGetListUsingGET4NotFound() *GetListUsingGET4NotFound {

	return &GetListUsingGET4NotFound{}
}

// WriteResponse to the client
func (o *GetListUsingGET4NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
