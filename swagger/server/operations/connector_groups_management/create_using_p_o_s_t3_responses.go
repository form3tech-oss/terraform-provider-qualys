/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package connector_groups_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// CreateUsingPOST3OKCode is the HTTP code returned for type CreateUsingPOST3OK
const CreateUsingPOST3OKCode int = 200

/*CreateUsingPOST3OK OK

swagger:response createUsingPOST3OK
*/
type CreateUsingPOST3OK struct {

	/*
	  In: Body
	*/
	Payload *models.CreateGroupResponse `json:"body,omitempty"`
}

// NewCreateUsingPOST3OK creates CreateUsingPOST3OK with default headers values
func NewCreateUsingPOST3OK() *CreateUsingPOST3OK {

	return &CreateUsingPOST3OK{}
}

// WithPayload adds the payload to the create using p o s t3 o k response
func (o *CreateUsingPOST3OK) WithPayload(payload *models.CreateGroupResponse) *CreateUsingPOST3OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create using p o s t3 o k response
func (o *CreateUsingPOST3OK) SetPayload(payload *models.CreateGroupResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUsingPOST3OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUsingPOST3CreatedCode is the HTTP code returned for type CreateUsingPOST3Created
const CreateUsingPOST3CreatedCode int = 201

/*CreateUsingPOST3Created Created

swagger:response createUsingPOST3Created
*/
type CreateUsingPOST3Created struct {
}

// NewCreateUsingPOST3Created creates CreateUsingPOST3Created with default headers values
func NewCreateUsingPOST3Created() *CreateUsingPOST3Created {

	return &CreateUsingPOST3Created{}
}

// WriteResponse to the client
func (o *CreateUsingPOST3Created) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// CreateUsingPOST3BadRequestCode is the HTTP code returned for type CreateUsingPOST3BadRequest
const CreateUsingPOST3BadRequestCode int = 400

/*CreateUsingPOST3BadRequest Bad Request

swagger:response createUsingPOST3BadRequest
*/
type CreateUsingPOST3BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewCreateUsingPOST3BadRequest creates CreateUsingPOST3BadRequest with default headers values
func NewCreateUsingPOST3BadRequest() *CreateUsingPOST3BadRequest {

	return &CreateUsingPOST3BadRequest{}
}

// WithPayload adds the payload to the create using p o s t3 bad request response
func (o *CreateUsingPOST3BadRequest) WithPayload(payload *models.APIErrorFacade) *CreateUsingPOST3BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create using p o s t3 bad request response
func (o *CreateUsingPOST3BadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUsingPOST3BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUsingPOST3UnauthorizedCode is the HTTP code returned for type CreateUsingPOST3Unauthorized
const CreateUsingPOST3UnauthorizedCode int = 401

/*CreateUsingPOST3Unauthorized Unauthorized user

swagger:response createUsingPOST3Unauthorized
*/
type CreateUsingPOST3Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewCreateUsingPOST3Unauthorized creates CreateUsingPOST3Unauthorized with default headers values
func NewCreateUsingPOST3Unauthorized() *CreateUsingPOST3Unauthorized {

	return &CreateUsingPOST3Unauthorized{}
}

// WithPayload adds the payload to the create using p o s t3 unauthorized response
func (o *CreateUsingPOST3Unauthorized) WithPayload(payload *models.APIErrorFacade) *CreateUsingPOST3Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create using p o s t3 unauthorized response
func (o *CreateUsingPOST3Unauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUsingPOST3Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUsingPOST3ForbiddenCode is the HTTP code returned for type CreateUsingPOST3Forbidden
const CreateUsingPOST3ForbiddenCode int = 403

/*CreateUsingPOST3Forbidden Forbidden

swagger:response createUsingPOST3Forbidden
*/
type CreateUsingPOST3Forbidden struct {
}

// NewCreateUsingPOST3Forbidden creates CreateUsingPOST3Forbidden with default headers values
func NewCreateUsingPOST3Forbidden() *CreateUsingPOST3Forbidden {

	return &CreateUsingPOST3Forbidden{}
}

// WriteResponse to the client
func (o *CreateUsingPOST3Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// CreateUsingPOST3NotFoundCode is the HTTP code returned for type CreateUsingPOST3NotFound
const CreateUsingPOST3NotFoundCode int = 404

/*CreateUsingPOST3NotFound Not Found

swagger:response createUsingPOST3NotFound
*/
type CreateUsingPOST3NotFound struct {
}

// NewCreateUsingPOST3NotFound creates CreateUsingPOST3NotFound with default headers values
func NewCreateUsingPOST3NotFound() *CreateUsingPOST3NotFound {

	return &CreateUsingPOST3NotFound{}
}

// WriteResponse to the client
func (o *CreateUsingPOST3NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
