/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package response_actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// GetAllActionsByFilterUsingGETOKCode is the HTTP code returned for type GetAllActionsByFilterUsingGETOK
const GetAllActionsByFilterUsingGETOKCode int = 200

/*GetAllActionsByFilterUsingGETOK OK

swagger:response getAllActionsByFilterUsingGETOK
*/
type GetAllActionsByFilterUsingGETOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ActionResponse `json:"body,omitempty"`
}

// NewGetAllActionsByFilterUsingGETOK creates GetAllActionsByFilterUsingGETOK with default headers values
func NewGetAllActionsByFilterUsingGETOK() *GetAllActionsByFilterUsingGETOK {

	return &GetAllActionsByFilterUsingGETOK{}
}

// WithPayload adds the payload to the get all actions by filter using g e t o k response
func (o *GetAllActionsByFilterUsingGETOK) WithPayload(payload []*models.ActionResponse) *GetAllActionsByFilterUsingGETOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all actions by filter using g e t o k response
func (o *GetAllActionsByFilterUsingGETOK) SetPayload(payload []*models.ActionResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllActionsByFilterUsingGETOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ActionResponse, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllActionsByFilterUsingGETBadRequestCode is the HTTP code returned for type GetAllActionsByFilterUsingGETBadRequest
const GetAllActionsByFilterUsingGETBadRequestCode int = 400

/*GetAllActionsByFilterUsingGETBadRequest Bad Request

swagger:response getAllActionsByFilterUsingGETBadRequest
*/
type GetAllActionsByFilterUsingGETBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetAllActionsByFilterUsingGETBadRequest creates GetAllActionsByFilterUsingGETBadRequest with default headers values
func NewGetAllActionsByFilterUsingGETBadRequest() *GetAllActionsByFilterUsingGETBadRequest {

	return &GetAllActionsByFilterUsingGETBadRequest{}
}

// WithPayload adds the payload to the get all actions by filter using g e t bad request response
func (o *GetAllActionsByFilterUsingGETBadRequest) WithPayload(payload *models.APIErrorFacade) *GetAllActionsByFilterUsingGETBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all actions by filter using g e t bad request response
func (o *GetAllActionsByFilterUsingGETBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllActionsByFilterUsingGETBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllActionsByFilterUsingGETUnauthorizedCode is the HTTP code returned for type GetAllActionsByFilterUsingGETUnauthorized
const GetAllActionsByFilterUsingGETUnauthorizedCode int = 401

/*GetAllActionsByFilterUsingGETUnauthorized Unauthorized user

swagger:response getAllActionsByFilterUsingGETUnauthorized
*/
type GetAllActionsByFilterUsingGETUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetAllActionsByFilterUsingGETUnauthorized creates GetAllActionsByFilterUsingGETUnauthorized with default headers values
func NewGetAllActionsByFilterUsingGETUnauthorized() *GetAllActionsByFilterUsingGETUnauthorized {

	return &GetAllActionsByFilterUsingGETUnauthorized{}
}

// WithPayload adds the payload to the get all actions by filter using g e t unauthorized response
func (o *GetAllActionsByFilterUsingGETUnauthorized) WithPayload(payload *models.APIErrorFacade) *GetAllActionsByFilterUsingGETUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all actions by filter using g e t unauthorized response
func (o *GetAllActionsByFilterUsingGETUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllActionsByFilterUsingGETUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllActionsByFilterUsingGETForbiddenCode is the HTTP code returned for type GetAllActionsByFilterUsingGETForbidden
const GetAllActionsByFilterUsingGETForbiddenCode int = 403

/*GetAllActionsByFilterUsingGETForbidden Forbidden

swagger:response getAllActionsByFilterUsingGETForbidden
*/
type GetAllActionsByFilterUsingGETForbidden struct {
}

// NewGetAllActionsByFilterUsingGETForbidden creates GetAllActionsByFilterUsingGETForbidden with default headers values
func NewGetAllActionsByFilterUsingGETForbidden() *GetAllActionsByFilterUsingGETForbidden {

	return &GetAllActionsByFilterUsingGETForbidden{}
}

// WriteResponse to the client
func (o *GetAllActionsByFilterUsingGETForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetAllActionsByFilterUsingGETNotFoundCode is the HTTP code returned for type GetAllActionsByFilterUsingGETNotFound
const GetAllActionsByFilterUsingGETNotFoundCode int = 404

/*GetAllActionsByFilterUsingGETNotFound Not Found

swagger:response getAllActionsByFilterUsingGETNotFound
*/
type GetAllActionsByFilterUsingGETNotFound struct {
}

// NewGetAllActionsByFilterUsingGETNotFound creates GetAllActionsByFilterUsingGETNotFound with default headers values
func NewGetAllActionsByFilterUsingGETNotFound() *GetAllActionsByFilterUsingGETNotFound {

	return &GetAllActionsByFilterUsingGETNotFound{}
}

// WriteResponse to the client
func (o *GetAllActionsByFilterUsingGETNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
