/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// CreateUsingPOST4OKCode is the HTTP code returned for type CreateUsingPOST4OK
const CreateUsingPOST4OKCode int = 200

/*CreateUsingPOST4OK OK

swagger:response createUsingPOST4OK
*/
type CreateUsingPOST4OK struct {

	/*
	  In: Body
	*/
	Payload *models.ReportConfigResponse `json:"body,omitempty"`
}

// NewCreateUsingPOST4OK creates CreateUsingPOST4OK with default headers values
func NewCreateUsingPOST4OK() *CreateUsingPOST4OK {

	return &CreateUsingPOST4OK{}
}

// WithPayload adds the payload to the create using p o s t4 o k response
func (o *CreateUsingPOST4OK) WithPayload(payload *models.ReportConfigResponse) *CreateUsingPOST4OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create using p o s t4 o k response
func (o *CreateUsingPOST4OK) SetPayload(payload *models.ReportConfigResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUsingPOST4OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUsingPOST4CreatedCode is the HTTP code returned for type CreateUsingPOST4Created
const CreateUsingPOST4CreatedCode int = 201

/*CreateUsingPOST4Created Created

swagger:response createUsingPOST4Created
*/
type CreateUsingPOST4Created struct {
}

// NewCreateUsingPOST4Created creates CreateUsingPOST4Created with default headers values
func NewCreateUsingPOST4Created() *CreateUsingPOST4Created {

	return &CreateUsingPOST4Created{}
}

// WriteResponse to the client
func (o *CreateUsingPOST4Created) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// CreateUsingPOST4BadRequestCode is the HTTP code returned for type CreateUsingPOST4BadRequest
const CreateUsingPOST4BadRequestCode int = 400

/*CreateUsingPOST4BadRequest Bad Request

swagger:response createUsingPOST4BadRequest
*/
type CreateUsingPOST4BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewCreateUsingPOST4BadRequest creates CreateUsingPOST4BadRequest with default headers values
func NewCreateUsingPOST4BadRequest() *CreateUsingPOST4BadRequest {

	return &CreateUsingPOST4BadRequest{}
}

// WithPayload adds the payload to the create using p o s t4 bad request response
func (o *CreateUsingPOST4BadRequest) WithPayload(payload *models.APIErrorFacade) *CreateUsingPOST4BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create using p o s t4 bad request response
func (o *CreateUsingPOST4BadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUsingPOST4BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUsingPOST4UnauthorizedCode is the HTTP code returned for type CreateUsingPOST4Unauthorized
const CreateUsingPOST4UnauthorizedCode int = 401

/*CreateUsingPOST4Unauthorized Unauthorized user

swagger:response createUsingPOST4Unauthorized
*/
type CreateUsingPOST4Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewCreateUsingPOST4Unauthorized creates CreateUsingPOST4Unauthorized with default headers values
func NewCreateUsingPOST4Unauthorized() *CreateUsingPOST4Unauthorized {

	return &CreateUsingPOST4Unauthorized{}
}

// WithPayload adds the payload to the create using p o s t4 unauthorized response
func (o *CreateUsingPOST4Unauthorized) WithPayload(payload *models.APIErrorFacade) *CreateUsingPOST4Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create using p o s t4 unauthorized response
func (o *CreateUsingPOST4Unauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUsingPOST4Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateUsingPOST4ForbiddenCode is the HTTP code returned for type CreateUsingPOST4Forbidden
const CreateUsingPOST4ForbiddenCode int = 403

/*CreateUsingPOST4Forbidden Forbidden

swagger:response createUsingPOST4Forbidden
*/
type CreateUsingPOST4Forbidden struct {
}

// NewCreateUsingPOST4Forbidden creates CreateUsingPOST4Forbidden with default headers values
func NewCreateUsingPOST4Forbidden() *CreateUsingPOST4Forbidden {

	return &CreateUsingPOST4Forbidden{}
}

// WriteResponse to the client
func (o *CreateUsingPOST4Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// CreateUsingPOST4NotFoundCode is the HTTP code returned for type CreateUsingPOST4NotFound
const CreateUsingPOST4NotFoundCode int = 404

/*CreateUsingPOST4NotFound Not Found

swagger:response createUsingPOST4NotFound
*/
type CreateUsingPOST4NotFound struct {
}

// NewCreateUsingPOST4NotFound creates CreateUsingPOST4NotFound with default headers values
func NewCreateUsingPOST4NotFound() *CreateUsingPOST4NotFound {

	return &CreateUsingPOST4NotFound{}
}

// WriteResponse to the client
func (o *CreateUsingPOST4NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
