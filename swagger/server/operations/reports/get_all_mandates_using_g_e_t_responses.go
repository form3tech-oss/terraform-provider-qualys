/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// GetAllMandatesUsingGETOKCode is the HTTP code returned for type GetAllMandatesUsingGETOK
const GetAllMandatesUsingGETOKCode int = 200

/*GetAllMandatesUsingGETOK OK

swagger:response getAllMandatesUsingGETOK
*/
type GetAllMandatesUsingGETOK struct {

	/*
	  In: Body
	*/
	Payload []*models.MandateConfigResponse `json:"body,omitempty"`
}

// NewGetAllMandatesUsingGETOK creates GetAllMandatesUsingGETOK with default headers values
func NewGetAllMandatesUsingGETOK() *GetAllMandatesUsingGETOK {

	return &GetAllMandatesUsingGETOK{}
}

// WithPayload adds the payload to the get all mandates using g e t o k response
func (o *GetAllMandatesUsingGETOK) WithPayload(payload []*models.MandateConfigResponse) *GetAllMandatesUsingGETOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all mandates using g e t o k response
func (o *GetAllMandatesUsingGETOK) SetPayload(payload []*models.MandateConfigResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllMandatesUsingGETOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.MandateConfigResponse, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllMandatesUsingGETBadRequestCode is the HTTP code returned for type GetAllMandatesUsingGETBadRequest
const GetAllMandatesUsingGETBadRequestCode int = 400

/*GetAllMandatesUsingGETBadRequest Bad Request

swagger:response getAllMandatesUsingGETBadRequest
*/
type GetAllMandatesUsingGETBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetAllMandatesUsingGETBadRequest creates GetAllMandatesUsingGETBadRequest with default headers values
func NewGetAllMandatesUsingGETBadRequest() *GetAllMandatesUsingGETBadRequest {

	return &GetAllMandatesUsingGETBadRequest{}
}

// WithPayload adds the payload to the get all mandates using g e t bad request response
func (o *GetAllMandatesUsingGETBadRequest) WithPayload(payload *models.APIErrorFacade) *GetAllMandatesUsingGETBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all mandates using g e t bad request response
func (o *GetAllMandatesUsingGETBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllMandatesUsingGETBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllMandatesUsingGETUnauthorizedCode is the HTTP code returned for type GetAllMandatesUsingGETUnauthorized
const GetAllMandatesUsingGETUnauthorizedCode int = 401

/*GetAllMandatesUsingGETUnauthorized Unauthorized user

swagger:response getAllMandatesUsingGETUnauthorized
*/
type GetAllMandatesUsingGETUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetAllMandatesUsingGETUnauthorized creates GetAllMandatesUsingGETUnauthorized with default headers values
func NewGetAllMandatesUsingGETUnauthorized() *GetAllMandatesUsingGETUnauthorized {

	return &GetAllMandatesUsingGETUnauthorized{}
}

// WithPayload adds the payload to the get all mandates using g e t unauthorized response
func (o *GetAllMandatesUsingGETUnauthorized) WithPayload(payload *models.APIErrorFacade) *GetAllMandatesUsingGETUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all mandates using g e t unauthorized response
func (o *GetAllMandatesUsingGETUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllMandatesUsingGETUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllMandatesUsingGETForbiddenCode is the HTTP code returned for type GetAllMandatesUsingGETForbidden
const GetAllMandatesUsingGETForbiddenCode int = 403

/*GetAllMandatesUsingGETForbidden Forbidden

swagger:response getAllMandatesUsingGETForbidden
*/
type GetAllMandatesUsingGETForbidden struct {
}

// NewGetAllMandatesUsingGETForbidden creates GetAllMandatesUsingGETForbidden with default headers values
func NewGetAllMandatesUsingGETForbidden() *GetAllMandatesUsingGETForbidden {

	return &GetAllMandatesUsingGETForbidden{}
}

// WriteResponse to the client
func (o *GetAllMandatesUsingGETForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetAllMandatesUsingGETNotFoundCode is the HTTP code returned for type GetAllMandatesUsingGETNotFound
const GetAllMandatesUsingGETNotFoundCode int = 404

/*GetAllMandatesUsingGETNotFound Not Found

swagger:response getAllMandatesUsingGETNotFound
*/
type GetAllMandatesUsingGETNotFound struct {
}

// NewGetAllMandatesUsingGETNotFound creates GetAllMandatesUsingGETNotFound with default headers values
func NewGetAllMandatesUsingGETNotFound() *GetAllMandatesUsingGETNotFound {

	return &GetAllMandatesUsingGETNotFound{}
}

// WriteResponse to the client
func (o *GetAllMandatesUsingGETNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
