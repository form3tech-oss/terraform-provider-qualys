/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package g_c_p_connector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// DisableConnectorsUsingPATCH2OKCode is the HTTP code returned for type DisableConnectorsUsingPATCH2OK
const DisableConnectorsUsingPATCH2OKCode int = 200

/*DisableConnectorsUsingPATCH2OK OK

swagger:response disableConnectorsUsingPATCH2OK
*/
type DisableConnectorsUsingPATCH2OK struct {

	/*
	  In: Body
	*/
	Payload *models.AckRequest `json:"body,omitempty"`
}

// NewDisableConnectorsUsingPATCH2OK creates DisableConnectorsUsingPATCH2OK with default headers values
func NewDisableConnectorsUsingPATCH2OK() *DisableConnectorsUsingPATCH2OK {

	return &DisableConnectorsUsingPATCH2OK{}
}

// WithPayload adds the payload to the disable connectors using p a t c h2 o k response
func (o *DisableConnectorsUsingPATCH2OK) WithPayload(payload *models.AckRequest) *DisableConnectorsUsingPATCH2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the disable connectors using p a t c h2 o k response
func (o *DisableConnectorsUsingPATCH2OK) SetPayload(payload *models.AckRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCH2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DisableConnectorsUsingPATCH2NoContentCode is the HTTP code returned for type DisableConnectorsUsingPATCH2NoContent
const DisableConnectorsUsingPATCH2NoContentCode int = 204

/*DisableConnectorsUsingPATCH2NoContent No Content

swagger:response disableConnectorsUsingPATCH2NoContent
*/
type DisableConnectorsUsingPATCH2NoContent struct {
}

// NewDisableConnectorsUsingPATCH2NoContent creates DisableConnectorsUsingPATCH2NoContent with default headers values
func NewDisableConnectorsUsingPATCH2NoContent() *DisableConnectorsUsingPATCH2NoContent {

	return &DisableConnectorsUsingPATCH2NoContent{}
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCH2NoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DisableConnectorsUsingPATCH2BadRequestCode is the HTTP code returned for type DisableConnectorsUsingPATCH2BadRequest
const DisableConnectorsUsingPATCH2BadRequestCode int = 400

/*DisableConnectorsUsingPATCH2BadRequest Bad Request

swagger:response disableConnectorsUsingPATCH2BadRequest
*/
type DisableConnectorsUsingPATCH2BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewDisableConnectorsUsingPATCH2BadRequest creates DisableConnectorsUsingPATCH2BadRequest with default headers values
func NewDisableConnectorsUsingPATCH2BadRequest() *DisableConnectorsUsingPATCH2BadRequest {

	return &DisableConnectorsUsingPATCH2BadRequest{}
}

// WithPayload adds the payload to the disable connectors using p a t c h2 bad request response
func (o *DisableConnectorsUsingPATCH2BadRequest) WithPayload(payload *models.APIErrorFacade) *DisableConnectorsUsingPATCH2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the disable connectors using p a t c h2 bad request response
func (o *DisableConnectorsUsingPATCH2BadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCH2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DisableConnectorsUsingPATCH2UnauthorizedCode is the HTTP code returned for type DisableConnectorsUsingPATCH2Unauthorized
const DisableConnectorsUsingPATCH2UnauthorizedCode int = 401

/*DisableConnectorsUsingPATCH2Unauthorized Unauthorized user

swagger:response disableConnectorsUsingPATCH2Unauthorized
*/
type DisableConnectorsUsingPATCH2Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewDisableConnectorsUsingPATCH2Unauthorized creates DisableConnectorsUsingPATCH2Unauthorized with default headers values
func NewDisableConnectorsUsingPATCH2Unauthorized() *DisableConnectorsUsingPATCH2Unauthorized {

	return &DisableConnectorsUsingPATCH2Unauthorized{}
}

// WithPayload adds the payload to the disable connectors using p a t c h2 unauthorized response
func (o *DisableConnectorsUsingPATCH2Unauthorized) WithPayload(payload *models.APIErrorFacade) *DisableConnectorsUsingPATCH2Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the disable connectors using p a t c h2 unauthorized response
func (o *DisableConnectorsUsingPATCH2Unauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCH2Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DisableConnectorsUsingPATCH2ForbiddenCode is the HTTP code returned for type DisableConnectorsUsingPATCH2Forbidden
const DisableConnectorsUsingPATCH2ForbiddenCode int = 403

/*DisableConnectorsUsingPATCH2Forbidden Forbidden

swagger:response disableConnectorsUsingPATCH2Forbidden
*/
type DisableConnectorsUsingPATCH2Forbidden struct {
}

// NewDisableConnectorsUsingPATCH2Forbidden creates DisableConnectorsUsingPATCH2Forbidden with default headers values
func NewDisableConnectorsUsingPATCH2Forbidden() *DisableConnectorsUsingPATCH2Forbidden {

	return &DisableConnectorsUsingPATCH2Forbidden{}
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCH2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
