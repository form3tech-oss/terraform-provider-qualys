/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package g_c_p_connector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// EnableConnectorsUsingPATCH2OKCode is the HTTP code returned for type EnableConnectorsUsingPATCH2OK
const EnableConnectorsUsingPATCH2OKCode int = 200

/*EnableConnectorsUsingPATCH2OK OK

swagger:response enableConnectorsUsingPATCH2OK
*/
type EnableConnectorsUsingPATCH2OK struct {

	/*
	  In: Body
	*/
	Payload *models.AckRequest `json:"body,omitempty"`
}

// NewEnableConnectorsUsingPATCH2OK creates EnableConnectorsUsingPATCH2OK with default headers values
func NewEnableConnectorsUsingPATCH2OK() *EnableConnectorsUsingPATCH2OK {

	return &EnableConnectorsUsingPATCH2OK{}
}

// WithPayload adds the payload to the enable connectors using p a t c h2 o k response
func (o *EnableConnectorsUsingPATCH2OK) WithPayload(payload *models.AckRequest) *EnableConnectorsUsingPATCH2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the enable connectors using p a t c h2 o k response
func (o *EnableConnectorsUsingPATCH2OK) SetPayload(payload *models.AckRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCH2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EnableConnectorsUsingPATCH2NoContentCode is the HTTP code returned for type EnableConnectorsUsingPATCH2NoContent
const EnableConnectorsUsingPATCH2NoContentCode int = 204

/*EnableConnectorsUsingPATCH2NoContent No Content

swagger:response enableConnectorsUsingPATCH2NoContent
*/
type EnableConnectorsUsingPATCH2NoContent struct {
}

// NewEnableConnectorsUsingPATCH2NoContent creates EnableConnectorsUsingPATCH2NoContent with default headers values
func NewEnableConnectorsUsingPATCH2NoContent() *EnableConnectorsUsingPATCH2NoContent {

	return &EnableConnectorsUsingPATCH2NoContent{}
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCH2NoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// EnableConnectorsUsingPATCH2BadRequestCode is the HTTP code returned for type EnableConnectorsUsingPATCH2BadRequest
const EnableConnectorsUsingPATCH2BadRequestCode int = 400

/*EnableConnectorsUsingPATCH2BadRequest Bad Request

swagger:response enableConnectorsUsingPATCH2BadRequest
*/
type EnableConnectorsUsingPATCH2BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewEnableConnectorsUsingPATCH2BadRequest creates EnableConnectorsUsingPATCH2BadRequest with default headers values
func NewEnableConnectorsUsingPATCH2BadRequest() *EnableConnectorsUsingPATCH2BadRequest {

	return &EnableConnectorsUsingPATCH2BadRequest{}
}

// WithPayload adds the payload to the enable connectors using p a t c h2 bad request response
func (o *EnableConnectorsUsingPATCH2BadRequest) WithPayload(payload *models.APIErrorFacade) *EnableConnectorsUsingPATCH2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the enable connectors using p a t c h2 bad request response
func (o *EnableConnectorsUsingPATCH2BadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCH2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EnableConnectorsUsingPATCH2UnauthorizedCode is the HTTP code returned for type EnableConnectorsUsingPATCH2Unauthorized
const EnableConnectorsUsingPATCH2UnauthorizedCode int = 401

/*EnableConnectorsUsingPATCH2Unauthorized Unauthorized user

swagger:response enableConnectorsUsingPATCH2Unauthorized
*/
type EnableConnectorsUsingPATCH2Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewEnableConnectorsUsingPATCH2Unauthorized creates EnableConnectorsUsingPATCH2Unauthorized with default headers values
func NewEnableConnectorsUsingPATCH2Unauthorized() *EnableConnectorsUsingPATCH2Unauthorized {

	return &EnableConnectorsUsingPATCH2Unauthorized{}
}

// WithPayload adds the payload to the enable connectors using p a t c h2 unauthorized response
func (o *EnableConnectorsUsingPATCH2Unauthorized) WithPayload(payload *models.APIErrorFacade) *EnableConnectorsUsingPATCH2Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the enable connectors using p a t c h2 unauthorized response
func (o *EnableConnectorsUsingPATCH2Unauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCH2Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EnableConnectorsUsingPATCH2ForbiddenCode is the HTTP code returned for type EnableConnectorsUsingPATCH2Forbidden
const EnableConnectorsUsingPATCH2ForbiddenCode int = 403

/*EnableConnectorsUsingPATCH2Forbidden Forbidden

swagger:response enableConnectorsUsingPATCH2Forbidden
*/
type EnableConnectorsUsingPATCH2Forbidden struct {
}

// NewEnableConnectorsUsingPATCH2Forbidden creates EnableConnectorsUsingPATCH2Forbidden with default headers values
func NewEnableConnectorsUsingPATCH2Forbidden() *EnableConnectorsUsingPATCH2Forbidden {

	return &EnableConnectorsUsingPATCH2Forbidden{}
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCH2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
