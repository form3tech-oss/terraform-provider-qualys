/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package response_notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// GetNotificationByIDUsingGETOKCode is the HTTP code returned for type GetNotificationByIDUsingGETOK
const GetNotificationByIDUsingGETOKCode int = 200

/*GetNotificationByIDUsingGETOK OK

swagger:response getNotificationByIdUsingGETOK
*/
type GetNotificationByIDUsingGETOK struct {

	/*
	  In: Body
	*/
	Payload *models.AlertResponse `json:"body,omitempty"`
}

// NewGetNotificationByIDUsingGETOK creates GetNotificationByIDUsingGETOK with default headers values
func NewGetNotificationByIDUsingGETOK() *GetNotificationByIDUsingGETOK {

	return &GetNotificationByIDUsingGETOK{}
}

// WithPayload adds the payload to the get notification by Id using g e t o k response
func (o *GetNotificationByIDUsingGETOK) WithPayload(payload *models.AlertResponse) *GetNotificationByIDUsingGETOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get notification by Id using g e t o k response
func (o *GetNotificationByIDUsingGETOK) SetPayload(payload *models.AlertResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNotificationByIDUsingGETOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNotificationByIDUsingGETBadRequestCode is the HTTP code returned for type GetNotificationByIDUsingGETBadRequest
const GetNotificationByIDUsingGETBadRequestCode int = 400

/*GetNotificationByIDUsingGETBadRequest Bad Request

swagger:response getNotificationByIdUsingGETBadRequest
*/
type GetNotificationByIDUsingGETBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetNotificationByIDUsingGETBadRequest creates GetNotificationByIDUsingGETBadRequest with default headers values
func NewGetNotificationByIDUsingGETBadRequest() *GetNotificationByIDUsingGETBadRequest {

	return &GetNotificationByIDUsingGETBadRequest{}
}

// WithPayload adds the payload to the get notification by Id using g e t bad request response
func (o *GetNotificationByIDUsingGETBadRequest) WithPayload(payload *models.APIErrorFacade) *GetNotificationByIDUsingGETBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get notification by Id using g e t bad request response
func (o *GetNotificationByIDUsingGETBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNotificationByIDUsingGETBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNotificationByIDUsingGETUnauthorizedCode is the HTTP code returned for type GetNotificationByIDUsingGETUnauthorized
const GetNotificationByIDUsingGETUnauthorizedCode int = 401

/*GetNotificationByIDUsingGETUnauthorized Unauthorized user

swagger:response getNotificationByIdUsingGETUnauthorized
*/
type GetNotificationByIDUsingGETUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetNotificationByIDUsingGETUnauthorized creates GetNotificationByIDUsingGETUnauthorized with default headers values
func NewGetNotificationByIDUsingGETUnauthorized() *GetNotificationByIDUsingGETUnauthorized {

	return &GetNotificationByIDUsingGETUnauthorized{}
}

// WithPayload adds the payload to the get notification by Id using g e t unauthorized response
func (o *GetNotificationByIDUsingGETUnauthorized) WithPayload(payload *models.APIErrorFacade) *GetNotificationByIDUsingGETUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get notification by Id using g e t unauthorized response
func (o *GetNotificationByIDUsingGETUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNotificationByIDUsingGETUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNotificationByIDUsingGETForbiddenCode is the HTTP code returned for type GetNotificationByIDUsingGETForbidden
const GetNotificationByIDUsingGETForbiddenCode int = 403

/*GetNotificationByIDUsingGETForbidden Forbidden

swagger:response getNotificationByIdUsingGETForbidden
*/
type GetNotificationByIDUsingGETForbidden struct {
}

// NewGetNotificationByIDUsingGETForbidden creates GetNotificationByIDUsingGETForbidden with default headers values
func NewGetNotificationByIDUsingGETForbidden() *GetNotificationByIDUsingGETForbidden {

	return &GetNotificationByIDUsingGETForbidden{}
}

// WriteResponse to the client
func (o *GetNotificationByIDUsingGETForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetNotificationByIDUsingGETNotFoundCode is the HTTP code returned for type GetNotificationByIDUsingGETNotFound
const GetNotificationByIDUsingGETNotFoundCode int = 404

/*GetNotificationByIDUsingGETNotFound Not Found

swagger:response getNotificationByIdUsingGETNotFound
*/
type GetNotificationByIDUsingGETNotFound struct {
}

// NewGetNotificationByIDUsingGETNotFound creates GetNotificationByIDUsingGETNotFound with default headers values
func NewGetNotificationByIDUsingGETNotFound() *GetNotificationByIDUsingGETNotFound {

	return &GetNotificationByIDUsingGETNotFound{}
}

// WriteResponse to the client
func (o *GetNotificationByIDUsingGETNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
