/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package a_w_s_connector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// EnableConnectorsUsingPATCH1OKCode is the HTTP code returned for type EnableConnectorsUsingPATCH1OK
const EnableConnectorsUsingPATCH1OKCode int = 200

/*EnableConnectorsUsingPATCH1OK OK

swagger:response enableConnectorsUsingPATCH1OK
*/
type EnableConnectorsUsingPATCH1OK struct {

	/*
	  In: Body
	*/
	Payload *models.AckRequest `json:"body,omitempty"`
}

// NewEnableConnectorsUsingPATCH1OK creates EnableConnectorsUsingPATCH1OK with default headers values
func NewEnableConnectorsUsingPATCH1OK() *EnableConnectorsUsingPATCH1OK {

	return &EnableConnectorsUsingPATCH1OK{}
}

// WithPayload adds the payload to the enable connectors using p a t c h1 o k response
func (o *EnableConnectorsUsingPATCH1OK) WithPayload(payload *models.AckRequest) *EnableConnectorsUsingPATCH1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the enable connectors using p a t c h1 o k response
func (o *EnableConnectorsUsingPATCH1OK) SetPayload(payload *models.AckRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCH1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EnableConnectorsUsingPATCH1NoContentCode is the HTTP code returned for type EnableConnectorsUsingPATCH1NoContent
const EnableConnectorsUsingPATCH1NoContentCode int = 204

/*EnableConnectorsUsingPATCH1NoContent No Content

swagger:response enableConnectorsUsingPATCH1NoContent
*/
type EnableConnectorsUsingPATCH1NoContent struct {
}

// NewEnableConnectorsUsingPATCH1NoContent creates EnableConnectorsUsingPATCH1NoContent with default headers values
func NewEnableConnectorsUsingPATCH1NoContent() *EnableConnectorsUsingPATCH1NoContent {

	return &EnableConnectorsUsingPATCH1NoContent{}
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCH1NoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// EnableConnectorsUsingPATCH1BadRequestCode is the HTTP code returned for type EnableConnectorsUsingPATCH1BadRequest
const EnableConnectorsUsingPATCH1BadRequestCode int = 400

/*EnableConnectorsUsingPATCH1BadRequest Bad Request

swagger:response enableConnectorsUsingPATCH1BadRequest
*/
type EnableConnectorsUsingPATCH1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewEnableConnectorsUsingPATCH1BadRequest creates EnableConnectorsUsingPATCH1BadRequest with default headers values
func NewEnableConnectorsUsingPATCH1BadRequest() *EnableConnectorsUsingPATCH1BadRequest {

	return &EnableConnectorsUsingPATCH1BadRequest{}
}

// WithPayload adds the payload to the enable connectors using p a t c h1 bad request response
func (o *EnableConnectorsUsingPATCH1BadRequest) WithPayload(payload *models.APIErrorFacade) *EnableConnectorsUsingPATCH1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the enable connectors using p a t c h1 bad request response
func (o *EnableConnectorsUsingPATCH1BadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCH1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EnableConnectorsUsingPATCH1UnauthorizedCode is the HTTP code returned for type EnableConnectorsUsingPATCH1Unauthorized
const EnableConnectorsUsingPATCH1UnauthorizedCode int = 401

/*EnableConnectorsUsingPATCH1Unauthorized Unauthorized user

swagger:response enableConnectorsUsingPATCH1Unauthorized
*/
type EnableConnectorsUsingPATCH1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewEnableConnectorsUsingPATCH1Unauthorized creates EnableConnectorsUsingPATCH1Unauthorized with default headers values
func NewEnableConnectorsUsingPATCH1Unauthorized() *EnableConnectorsUsingPATCH1Unauthorized {

	return &EnableConnectorsUsingPATCH1Unauthorized{}
}

// WithPayload adds the payload to the enable connectors using p a t c h1 unauthorized response
func (o *EnableConnectorsUsingPATCH1Unauthorized) WithPayload(payload *models.APIErrorFacade) *EnableConnectorsUsingPATCH1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the enable connectors using p a t c h1 unauthorized response
func (o *EnableConnectorsUsingPATCH1Unauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCH1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EnableConnectorsUsingPATCH1ForbiddenCode is the HTTP code returned for type EnableConnectorsUsingPATCH1Forbidden
const EnableConnectorsUsingPATCH1ForbiddenCode int = 403

/*EnableConnectorsUsingPATCH1Forbidden Forbidden

swagger:response enableConnectorsUsingPATCH1Forbidden
*/
type EnableConnectorsUsingPATCH1Forbidden struct {
}

// NewEnableConnectorsUsingPATCH1Forbidden creates EnableConnectorsUsingPATCH1Forbidden with default headers values
func NewEnableConnectorsUsingPATCH1Forbidden() *EnableConnectorsUsingPATCH1Forbidden {

	return &EnableConnectorsUsingPATCH1Forbidden{}
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCH1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
