/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package a_w_s_connector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NewDownloadAwsCloudFormationTemplateUsingGETParams creates a new DownloadAwsCloudFormationTemplateUsingGETParams object
// no default values defined in spec.
func NewDownloadAwsCloudFormationTemplateUsingGETParams() DownloadAwsCloudFormationTemplateUsingGETParams {

	return DownloadAwsCloudFormationTemplateUsingGETParams{}
}

// DownloadAwsCloudFormationTemplateUsingGETParams contains all the bound params for the download aws cloud formation template using g e t operation
// typically these are obtained from a http.Request
//
// swagger:parameters downloadAwsCloudFormationTemplateUsingGET
type DownloadAwsCloudFormationTemplateUsingGETParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*Aws Cloud type used for generating the template for particular Cloud.
	  Required: true
	  In: query
	*/
	AwsCloudType string
	/*External Id to be used for generating the template.
	  Required: true
	  In: query
	*/
	ExternalID string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewDownloadAwsCloudFormationTemplateUsingGETParams() beforehand.
func (o *DownloadAwsCloudFormationTemplateUsingGETParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qAwsCloudType, qhkAwsCloudType, _ := qs.GetOK("awsCloudType")
	if err := o.bindAwsCloudType(qAwsCloudType, qhkAwsCloudType, route.Formats); err != nil {
		res = append(res, err)
	}

	qExternalID, qhkExternalID, _ := qs.GetOK("externalId")
	if err := o.bindExternalID(qExternalID, qhkExternalID, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindAwsCloudType binds and validates parameter AwsCloudType from query.
func (o *DownloadAwsCloudFormationTemplateUsingGETParams) bindAwsCloudType(rawData []string, hasKey bool, formats strfmt.Registry) error {
	if !hasKey {
		return errors.Required("awsCloudType", "query", rawData)
	}
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// AllowEmptyValue: false
	if err := validate.RequiredString("awsCloudType", "query", raw); err != nil {
		return err
	}

	o.AwsCloudType = raw

	if err := o.validateAwsCloudType(formats); err != nil {
		return err
	}

	return nil
}

// validateAwsCloudType carries on validations for parameter AwsCloudType
func (o *DownloadAwsCloudFormationTemplateUsingGETParams) validateAwsCloudType(formats strfmt.Registry) error {

	if err := validate.EnumCase("awsCloudType", "query", o.AwsCloudType, []interface{}{"Gov", "China", "Global"}, true); err != nil {
		return err
	}

	return nil
}

// bindExternalID binds and validates parameter ExternalID from query.
func (o *DownloadAwsCloudFormationTemplateUsingGETParams) bindExternalID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	if !hasKey {
		return errors.Required("externalId", "query", rawData)
	}
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// AllowEmptyValue: false
	if err := validate.RequiredString("externalId", "query", raw); err != nil {
		return err
	}

	o.ExternalID = raw

	return nil
}
