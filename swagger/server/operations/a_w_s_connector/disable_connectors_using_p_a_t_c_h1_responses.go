/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package a_w_s_connector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// DisableConnectorsUsingPATCH1OKCode is the HTTP code returned for type DisableConnectorsUsingPATCH1OK
const DisableConnectorsUsingPATCH1OKCode int = 200

/*DisableConnectorsUsingPATCH1OK OK

swagger:response disableConnectorsUsingPATCH1OK
*/
type DisableConnectorsUsingPATCH1OK struct {

	/*
	  In: Body
	*/
	Payload *models.AckRequest `json:"body,omitempty"`
}

// NewDisableConnectorsUsingPATCH1OK creates DisableConnectorsUsingPATCH1OK with default headers values
func NewDisableConnectorsUsingPATCH1OK() *DisableConnectorsUsingPATCH1OK {

	return &DisableConnectorsUsingPATCH1OK{}
}

// WithPayload adds the payload to the disable connectors using p a t c h1 o k response
func (o *DisableConnectorsUsingPATCH1OK) WithPayload(payload *models.AckRequest) *DisableConnectorsUsingPATCH1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the disable connectors using p a t c h1 o k response
func (o *DisableConnectorsUsingPATCH1OK) SetPayload(payload *models.AckRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCH1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DisableConnectorsUsingPATCH1NoContentCode is the HTTP code returned for type DisableConnectorsUsingPATCH1NoContent
const DisableConnectorsUsingPATCH1NoContentCode int = 204

/*DisableConnectorsUsingPATCH1NoContent No Content

swagger:response disableConnectorsUsingPATCH1NoContent
*/
type DisableConnectorsUsingPATCH1NoContent struct {
}

// NewDisableConnectorsUsingPATCH1NoContent creates DisableConnectorsUsingPATCH1NoContent with default headers values
func NewDisableConnectorsUsingPATCH1NoContent() *DisableConnectorsUsingPATCH1NoContent {

	return &DisableConnectorsUsingPATCH1NoContent{}
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCH1NoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DisableConnectorsUsingPATCH1BadRequestCode is the HTTP code returned for type DisableConnectorsUsingPATCH1BadRequest
const DisableConnectorsUsingPATCH1BadRequestCode int = 400

/*DisableConnectorsUsingPATCH1BadRequest Bad Request

swagger:response disableConnectorsUsingPATCH1BadRequest
*/
type DisableConnectorsUsingPATCH1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewDisableConnectorsUsingPATCH1BadRequest creates DisableConnectorsUsingPATCH1BadRequest with default headers values
func NewDisableConnectorsUsingPATCH1BadRequest() *DisableConnectorsUsingPATCH1BadRequest {

	return &DisableConnectorsUsingPATCH1BadRequest{}
}

// WithPayload adds the payload to the disable connectors using p a t c h1 bad request response
func (o *DisableConnectorsUsingPATCH1BadRequest) WithPayload(payload *models.APIErrorFacade) *DisableConnectorsUsingPATCH1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the disable connectors using p a t c h1 bad request response
func (o *DisableConnectorsUsingPATCH1BadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCH1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DisableConnectorsUsingPATCH1UnauthorizedCode is the HTTP code returned for type DisableConnectorsUsingPATCH1Unauthorized
const DisableConnectorsUsingPATCH1UnauthorizedCode int = 401

/*DisableConnectorsUsingPATCH1Unauthorized Unauthorized user

swagger:response disableConnectorsUsingPATCH1Unauthorized
*/
type DisableConnectorsUsingPATCH1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewDisableConnectorsUsingPATCH1Unauthorized creates DisableConnectorsUsingPATCH1Unauthorized with default headers values
func NewDisableConnectorsUsingPATCH1Unauthorized() *DisableConnectorsUsingPATCH1Unauthorized {

	return &DisableConnectorsUsingPATCH1Unauthorized{}
}

// WithPayload adds the payload to the disable connectors using p a t c h1 unauthorized response
func (o *DisableConnectorsUsingPATCH1Unauthorized) WithPayload(payload *models.APIErrorFacade) *DisableConnectorsUsingPATCH1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the disable connectors using p a t c h1 unauthorized response
func (o *DisableConnectorsUsingPATCH1Unauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCH1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DisableConnectorsUsingPATCH1ForbiddenCode is the HTTP code returned for type DisableConnectorsUsingPATCH1Forbidden
const DisableConnectorsUsingPATCH1ForbiddenCode int = 403

/*DisableConnectorsUsingPATCH1Forbidden Forbidden

swagger:response disableConnectorsUsingPATCH1Forbidden
*/
type DisableConnectorsUsingPATCH1Forbidden struct {
}

// NewDisableConnectorsUsingPATCH1Forbidden creates DisableConnectorsUsingPATCH1Forbidden with default headers values
func NewDisableConnectorsUsingPATCH1Forbidden() *DisableConnectorsUsingPATCH1Forbidden {

	return &DisableConnectorsUsingPATCH1Forbidden{}
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCH1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
