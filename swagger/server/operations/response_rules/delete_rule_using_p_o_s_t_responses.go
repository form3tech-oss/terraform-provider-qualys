/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package response_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// DeleteRuleUsingPOSTOKCode is the HTTP code returned for type DeleteRuleUsingPOSTOK
const DeleteRuleUsingPOSTOKCode int = 200

/*DeleteRuleUsingPOSTOK OK

swagger:response deleteRuleUsingPOSTOK
*/
type DeleteRuleUsingPOSTOK struct {

	/*
	  In: Body
	*/
	Payload map[string]string `json:"body,omitempty"`
}

// NewDeleteRuleUsingPOSTOK creates DeleteRuleUsingPOSTOK with default headers values
func NewDeleteRuleUsingPOSTOK() *DeleteRuleUsingPOSTOK {

	return &DeleteRuleUsingPOSTOK{}
}

// WithPayload adds the payload to the delete rule using p o s t o k response
func (o *DeleteRuleUsingPOSTOK) WithPayload(payload map[string]string) *DeleteRuleUsingPOSTOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete rule using p o s t o k response
func (o *DeleteRuleUsingPOSTOK) SetPayload(payload map[string]string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRuleUsingPOSTOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty map
		payload = make(map[string]string, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DeleteRuleUsingPOSTCreatedCode is the HTTP code returned for type DeleteRuleUsingPOSTCreated
const DeleteRuleUsingPOSTCreatedCode int = 201

/*DeleteRuleUsingPOSTCreated Created

swagger:response deleteRuleUsingPOSTCreated
*/
type DeleteRuleUsingPOSTCreated struct {
}

// NewDeleteRuleUsingPOSTCreated creates DeleteRuleUsingPOSTCreated with default headers values
func NewDeleteRuleUsingPOSTCreated() *DeleteRuleUsingPOSTCreated {

	return &DeleteRuleUsingPOSTCreated{}
}

// WriteResponse to the client
func (o *DeleteRuleUsingPOSTCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// DeleteRuleUsingPOSTBadRequestCode is the HTTP code returned for type DeleteRuleUsingPOSTBadRequest
const DeleteRuleUsingPOSTBadRequestCode int = 400

/*DeleteRuleUsingPOSTBadRequest Bad Request

swagger:response deleteRuleUsingPOSTBadRequest
*/
type DeleteRuleUsingPOSTBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewDeleteRuleUsingPOSTBadRequest creates DeleteRuleUsingPOSTBadRequest with default headers values
func NewDeleteRuleUsingPOSTBadRequest() *DeleteRuleUsingPOSTBadRequest {

	return &DeleteRuleUsingPOSTBadRequest{}
}

// WithPayload adds the payload to the delete rule using p o s t bad request response
func (o *DeleteRuleUsingPOSTBadRequest) WithPayload(payload *models.APIErrorFacade) *DeleteRuleUsingPOSTBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete rule using p o s t bad request response
func (o *DeleteRuleUsingPOSTBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRuleUsingPOSTBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteRuleUsingPOSTUnauthorizedCode is the HTTP code returned for type DeleteRuleUsingPOSTUnauthorized
const DeleteRuleUsingPOSTUnauthorizedCode int = 401

/*DeleteRuleUsingPOSTUnauthorized Unauthorized user

swagger:response deleteRuleUsingPOSTUnauthorized
*/
type DeleteRuleUsingPOSTUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewDeleteRuleUsingPOSTUnauthorized creates DeleteRuleUsingPOSTUnauthorized with default headers values
func NewDeleteRuleUsingPOSTUnauthorized() *DeleteRuleUsingPOSTUnauthorized {

	return &DeleteRuleUsingPOSTUnauthorized{}
}

// WithPayload adds the payload to the delete rule using p o s t unauthorized response
func (o *DeleteRuleUsingPOSTUnauthorized) WithPayload(payload *models.APIErrorFacade) *DeleteRuleUsingPOSTUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete rule using p o s t unauthorized response
func (o *DeleteRuleUsingPOSTUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRuleUsingPOSTUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteRuleUsingPOSTForbiddenCode is the HTTP code returned for type DeleteRuleUsingPOSTForbidden
const DeleteRuleUsingPOSTForbiddenCode int = 403

/*DeleteRuleUsingPOSTForbidden Forbidden

swagger:response deleteRuleUsingPOSTForbidden
*/
type DeleteRuleUsingPOSTForbidden struct {
}

// NewDeleteRuleUsingPOSTForbidden creates DeleteRuleUsingPOSTForbidden with default headers values
func NewDeleteRuleUsingPOSTForbidden() *DeleteRuleUsingPOSTForbidden {

	return &DeleteRuleUsingPOSTForbidden{}
}

// WriteResponse to the client
func (o *DeleteRuleUsingPOSTForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// DeleteRuleUsingPOSTNotFoundCode is the HTTP code returned for type DeleteRuleUsingPOSTNotFound
const DeleteRuleUsingPOSTNotFoundCode int = 404

/*DeleteRuleUsingPOSTNotFound Not Found

swagger:response deleteRuleUsingPOSTNotFound
*/
type DeleteRuleUsingPOSTNotFound struct {
}

// NewDeleteRuleUsingPOSTNotFound creates DeleteRuleUsingPOSTNotFound with default headers values
func NewDeleteRuleUsingPOSTNotFound() *DeleteRuleUsingPOSTNotFound {

	return &DeleteRuleUsingPOSTNotFound{}
}

// WriteResponse to the client
func (o *DeleteRuleUsingPOSTNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
