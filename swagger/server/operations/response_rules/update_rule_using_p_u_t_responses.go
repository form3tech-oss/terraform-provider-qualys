/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package response_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// UpdateRuleUsingPUTOKCode is the HTTP code returned for type UpdateRuleUsingPUTOK
const UpdateRuleUsingPUTOKCode int = 200

/*UpdateRuleUsingPUTOK OK

swagger:response updateRuleUsingPUTOK
*/
type UpdateRuleUsingPUTOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseEntity `json:"body,omitempty"`
}

// NewUpdateRuleUsingPUTOK creates UpdateRuleUsingPUTOK with default headers values
func NewUpdateRuleUsingPUTOK() *UpdateRuleUsingPUTOK {

	return &UpdateRuleUsingPUTOK{}
}

// WithPayload adds the payload to the update rule using p u t o k response
func (o *UpdateRuleUsingPUTOK) WithPayload(payload *models.ResponseEntity) *UpdateRuleUsingPUTOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update rule using p u t o k response
func (o *UpdateRuleUsingPUTOK) SetPayload(payload *models.ResponseEntity) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateRuleUsingPUTOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateRuleUsingPUTCreatedCode is the HTTP code returned for type UpdateRuleUsingPUTCreated
const UpdateRuleUsingPUTCreatedCode int = 201

/*UpdateRuleUsingPUTCreated Created

swagger:response updateRuleUsingPUTCreated
*/
type UpdateRuleUsingPUTCreated struct {
}

// NewUpdateRuleUsingPUTCreated creates UpdateRuleUsingPUTCreated with default headers values
func NewUpdateRuleUsingPUTCreated() *UpdateRuleUsingPUTCreated {

	return &UpdateRuleUsingPUTCreated{}
}

// WriteResponse to the client
func (o *UpdateRuleUsingPUTCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// UpdateRuleUsingPUTBadRequestCode is the HTTP code returned for type UpdateRuleUsingPUTBadRequest
const UpdateRuleUsingPUTBadRequestCode int = 400

/*UpdateRuleUsingPUTBadRequest Bad Request

swagger:response updateRuleUsingPUTBadRequest
*/
type UpdateRuleUsingPUTBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewUpdateRuleUsingPUTBadRequest creates UpdateRuleUsingPUTBadRequest with default headers values
func NewUpdateRuleUsingPUTBadRequest() *UpdateRuleUsingPUTBadRequest {

	return &UpdateRuleUsingPUTBadRequest{}
}

// WithPayload adds the payload to the update rule using p u t bad request response
func (o *UpdateRuleUsingPUTBadRequest) WithPayload(payload *models.APIErrorFacade) *UpdateRuleUsingPUTBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update rule using p u t bad request response
func (o *UpdateRuleUsingPUTBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateRuleUsingPUTBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateRuleUsingPUTUnauthorizedCode is the HTTP code returned for type UpdateRuleUsingPUTUnauthorized
const UpdateRuleUsingPUTUnauthorizedCode int = 401

/*UpdateRuleUsingPUTUnauthorized Unauthorized user

swagger:response updateRuleUsingPUTUnauthorized
*/
type UpdateRuleUsingPUTUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewUpdateRuleUsingPUTUnauthorized creates UpdateRuleUsingPUTUnauthorized with default headers values
func NewUpdateRuleUsingPUTUnauthorized() *UpdateRuleUsingPUTUnauthorized {

	return &UpdateRuleUsingPUTUnauthorized{}
}

// WithPayload adds the payload to the update rule using p u t unauthorized response
func (o *UpdateRuleUsingPUTUnauthorized) WithPayload(payload *models.APIErrorFacade) *UpdateRuleUsingPUTUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update rule using p u t unauthorized response
func (o *UpdateRuleUsingPUTUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateRuleUsingPUTUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateRuleUsingPUTForbiddenCode is the HTTP code returned for type UpdateRuleUsingPUTForbidden
const UpdateRuleUsingPUTForbiddenCode int = 403

/*UpdateRuleUsingPUTForbidden Forbidden

swagger:response updateRuleUsingPUTForbidden
*/
type UpdateRuleUsingPUTForbidden struct {
}

// NewUpdateRuleUsingPUTForbidden creates UpdateRuleUsingPUTForbidden with default headers values
func NewUpdateRuleUsingPUTForbidden() *UpdateRuleUsingPUTForbidden {

	return &UpdateRuleUsingPUTForbidden{}
}

// WriteResponse to the client
func (o *UpdateRuleUsingPUTForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// UpdateRuleUsingPUTNotFoundCode is the HTTP code returned for type UpdateRuleUsingPUTNotFound
const UpdateRuleUsingPUTNotFoundCode int = 404

/*UpdateRuleUsingPUTNotFound Not Found

swagger:response updateRuleUsingPUTNotFound
*/
type UpdateRuleUsingPUTNotFound struct {
}

// NewUpdateRuleUsingPUTNotFound creates UpdateRuleUsingPUTNotFound with default headers values
func NewUpdateRuleUsingPUTNotFound() *UpdateRuleUsingPUTNotFound {

	return &UpdateRuleUsingPUTNotFound{}
}

// WriteResponse to the client
func (o *UpdateRuleUsingPUTNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
