/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package response_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// GetRuleByIDUsingGETOKCode is the HTTP code returned for type GetRuleByIDUsingGETOK
const GetRuleByIDUsingGETOKCode int = 200

/*GetRuleByIDUsingGETOK OK

swagger:response getRuleByIdUsingGETOK
*/
type GetRuleByIDUsingGETOK struct {

	/*
	  In: Body
	*/
	Payload *models.RuleResponse `json:"body,omitempty"`
}

// NewGetRuleByIDUsingGETOK creates GetRuleByIDUsingGETOK with default headers values
func NewGetRuleByIDUsingGETOK() *GetRuleByIDUsingGETOK {

	return &GetRuleByIDUsingGETOK{}
}

// WithPayload adds the payload to the get rule by Id using g e t o k response
func (o *GetRuleByIDUsingGETOK) WithPayload(payload *models.RuleResponse) *GetRuleByIDUsingGETOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rule by Id using g e t o k response
func (o *GetRuleByIDUsingGETOK) SetPayload(payload *models.RuleResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuleByIDUsingGETOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRuleByIDUsingGETBadRequestCode is the HTTP code returned for type GetRuleByIDUsingGETBadRequest
const GetRuleByIDUsingGETBadRequestCode int = 400

/*GetRuleByIDUsingGETBadRequest Bad Request

swagger:response getRuleByIdUsingGETBadRequest
*/
type GetRuleByIDUsingGETBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetRuleByIDUsingGETBadRequest creates GetRuleByIDUsingGETBadRequest with default headers values
func NewGetRuleByIDUsingGETBadRequest() *GetRuleByIDUsingGETBadRequest {

	return &GetRuleByIDUsingGETBadRequest{}
}

// WithPayload adds the payload to the get rule by Id using g e t bad request response
func (o *GetRuleByIDUsingGETBadRequest) WithPayload(payload *models.APIErrorFacade) *GetRuleByIDUsingGETBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rule by Id using g e t bad request response
func (o *GetRuleByIDUsingGETBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuleByIDUsingGETBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRuleByIDUsingGETUnauthorizedCode is the HTTP code returned for type GetRuleByIDUsingGETUnauthorized
const GetRuleByIDUsingGETUnauthorizedCode int = 401

/*GetRuleByIDUsingGETUnauthorized Unauthorized user

swagger:response getRuleByIdUsingGETUnauthorized
*/
type GetRuleByIDUsingGETUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetRuleByIDUsingGETUnauthorized creates GetRuleByIDUsingGETUnauthorized with default headers values
func NewGetRuleByIDUsingGETUnauthorized() *GetRuleByIDUsingGETUnauthorized {

	return &GetRuleByIDUsingGETUnauthorized{}
}

// WithPayload adds the payload to the get rule by Id using g e t unauthorized response
func (o *GetRuleByIDUsingGETUnauthorized) WithPayload(payload *models.APIErrorFacade) *GetRuleByIDUsingGETUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get rule by Id using g e t unauthorized response
func (o *GetRuleByIDUsingGETUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRuleByIDUsingGETUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRuleByIDUsingGETForbiddenCode is the HTTP code returned for type GetRuleByIDUsingGETForbidden
const GetRuleByIDUsingGETForbiddenCode int = 403

/*GetRuleByIDUsingGETForbidden Forbidden

swagger:response getRuleByIdUsingGETForbidden
*/
type GetRuleByIDUsingGETForbidden struct {
}

// NewGetRuleByIDUsingGETForbidden creates GetRuleByIDUsingGETForbidden with default headers values
func NewGetRuleByIDUsingGETForbidden() *GetRuleByIDUsingGETForbidden {

	return &GetRuleByIDUsingGETForbidden{}
}

// WriteResponse to the client
func (o *GetRuleByIDUsingGETForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetRuleByIDUsingGETNotFoundCode is the HTTP code returned for type GetRuleByIDUsingGETNotFound
const GetRuleByIDUsingGETNotFoundCode int = 404

/*GetRuleByIDUsingGETNotFound Not Found

swagger:response getRuleByIdUsingGETNotFound
*/
type GetRuleByIDUsingGETNotFound struct {
}

// NewGetRuleByIDUsingGETNotFound creates GetRuleByIDUsingGETNotFound with default headers values
func NewGetRuleByIDUsingGETNotFound() *GetRuleByIDUsingGETNotFound {

	return &GetRuleByIDUsingGETNotFound{}
}

// WriteResponse to the client
func (o *GetRuleByIDUsingGETNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
