/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package response_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// GetAllRulesByFilterUsingGETOKCode is the HTTP code returned for type GetAllRulesByFilterUsingGETOK
const GetAllRulesByFilterUsingGETOKCode int = 200

/*GetAllRulesByFilterUsingGETOK OK

swagger:response getAllRulesByFilterUsingGETOK
*/
type GetAllRulesByFilterUsingGETOK struct {

	/*
	  In: Body
	*/
	Payload []*models.RuleResponse `json:"body,omitempty"`
}

// NewGetAllRulesByFilterUsingGETOK creates GetAllRulesByFilterUsingGETOK with default headers values
func NewGetAllRulesByFilterUsingGETOK() *GetAllRulesByFilterUsingGETOK {

	return &GetAllRulesByFilterUsingGETOK{}
}

// WithPayload adds the payload to the get all rules by filter using g e t o k response
func (o *GetAllRulesByFilterUsingGETOK) WithPayload(payload []*models.RuleResponse) *GetAllRulesByFilterUsingGETOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all rules by filter using g e t o k response
func (o *GetAllRulesByFilterUsingGETOK) SetPayload(payload []*models.RuleResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllRulesByFilterUsingGETOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.RuleResponse, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllRulesByFilterUsingGETBadRequestCode is the HTTP code returned for type GetAllRulesByFilterUsingGETBadRequest
const GetAllRulesByFilterUsingGETBadRequestCode int = 400

/*GetAllRulesByFilterUsingGETBadRequest Bad Request

swagger:response getAllRulesByFilterUsingGETBadRequest
*/
type GetAllRulesByFilterUsingGETBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetAllRulesByFilterUsingGETBadRequest creates GetAllRulesByFilterUsingGETBadRequest with default headers values
func NewGetAllRulesByFilterUsingGETBadRequest() *GetAllRulesByFilterUsingGETBadRequest {

	return &GetAllRulesByFilterUsingGETBadRequest{}
}

// WithPayload adds the payload to the get all rules by filter using g e t bad request response
func (o *GetAllRulesByFilterUsingGETBadRequest) WithPayload(payload *models.APIErrorFacade) *GetAllRulesByFilterUsingGETBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all rules by filter using g e t bad request response
func (o *GetAllRulesByFilterUsingGETBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllRulesByFilterUsingGETBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllRulesByFilterUsingGETUnauthorizedCode is the HTTP code returned for type GetAllRulesByFilterUsingGETUnauthorized
const GetAllRulesByFilterUsingGETUnauthorizedCode int = 401

/*GetAllRulesByFilterUsingGETUnauthorized Unauthorized user

swagger:response getAllRulesByFilterUsingGETUnauthorized
*/
type GetAllRulesByFilterUsingGETUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetAllRulesByFilterUsingGETUnauthorized creates GetAllRulesByFilterUsingGETUnauthorized with default headers values
func NewGetAllRulesByFilterUsingGETUnauthorized() *GetAllRulesByFilterUsingGETUnauthorized {

	return &GetAllRulesByFilterUsingGETUnauthorized{}
}

// WithPayload adds the payload to the get all rules by filter using g e t unauthorized response
func (o *GetAllRulesByFilterUsingGETUnauthorized) WithPayload(payload *models.APIErrorFacade) *GetAllRulesByFilterUsingGETUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all rules by filter using g e t unauthorized response
func (o *GetAllRulesByFilterUsingGETUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllRulesByFilterUsingGETUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllRulesByFilterUsingGETForbiddenCode is the HTTP code returned for type GetAllRulesByFilterUsingGETForbidden
const GetAllRulesByFilterUsingGETForbiddenCode int = 403

/*GetAllRulesByFilterUsingGETForbidden Forbidden

swagger:response getAllRulesByFilterUsingGETForbidden
*/
type GetAllRulesByFilterUsingGETForbidden struct {
}

// NewGetAllRulesByFilterUsingGETForbidden creates GetAllRulesByFilterUsingGETForbidden with default headers values
func NewGetAllRulesByFilterUsingGETForbidden() *GetAllRulesByFilterUsingGETForbidden {

	return &GetAllRulesByFilterUsingGETForbidden{}
}

// WriteResponse to the client
func (o *GetAllRulesByFilterUsingGETForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetAllRulesByFilterUsingGETNotFoundCode is the HTTP code returned for type GetAllRulesByFilterUsingGETNotFound
const GetAllRulesByFilterUsingGETNotFoundCode int = 404

/*GetAllRulesByFilterUsingGETNotFound Not Found

swagger:response getAllRulesByFilterUsingGETNotFound
*/
type GetAllRulesByFilterUsingGETNotFound struct {
}

// NewGetAllRulesByFilterUsingGETNotFound creates GetAllRulesByFilterUsingGETNotFound with default headers values
func NewGetAllRulesByFilterUsingGETNotFound() *GetAllRulesByFilterUsingGETNotFound {

	return &GetAllRulesByFilterUsingGETNotFound{}
}

// WriteResponse to the client
func (o *GetAllRulesByFilterUsingGETNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
