/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package response_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// CreateRuleUsingPOSTOKCode is the HTTP code returned for type CreateRuleUsingPOSTOK
const CreateRuleUsingPOSTOKCode int = 200

/*CreateRuleUsingPOSTOK OK

swagger:response createRuleUsingPOSTOK
*/
type CreateRuleUsingPOSTOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseEntity `json:"body,omitempty"`
}

// NewCreateRuleUsingPOSTOK creates CreateRuleUsingPOSTOK with default headers values
func NewCreateRuleUsingPOSTOK() *CreateRuleUsingPOSTOK {

	return &CreateRuleUsingPOSTOK{}
}

// WithPayload adds the payload to the create rule using p o s t o k response
func (o *CreateRuleUsingPOSTOK) WithPayload(payload *models.ResponseEntity) *CreateRuleUsingPOSTOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create rule using p o s t o k response
func (o *CreateRuleUsingPOSTOK) SetPayload(payload *models.ResponseEntity) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRuleUsingPOSTOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRuleUsingPOSTCreatedCode is the HTTP code returned for type CreateRuleUsingPOSTCreated
const CreateRuleUsingPOSTCreatedCode int = 201

/*CreateRuleUsingPOSTCreated Created

swagger:response createRuleUsingPOSTCreated
*/
type CreateRuleUsingPOSTCreated struct {
}

// NewCreateRuleUsingPOSTCreated creates CreateRuleUsingPOSTCreated with default headers values
func NewCreateRuleUsingPOSTCreated() *CreateRuleUsingPOSTCreated {

	return &CreateRuleUsingPOSTCreated{}
}

// WriteResponse to the client
func (o *CreateRuleUsingPOSTCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// CreateRuleUsingPOSTBadRequestCode is the HTTP code returned for type CreateRuleUsingPOSTBadRequest
const CreateRuleUsingPOSTBadRequestCode int = 400

/*CreateRuleUsingPOSTBadRequest Bad Request

swagger:response createRuleUsingPOSTBadRequest
*/
type CreateRuleUsingPOSTBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewCreateRuleUsingPOSTBadRequest creates CreateRuleUsingPOSTBadRequest with default headers values
func NewCreateRuleUsingPOSTBadRequest() *CreateRuleUsingPOSTBadRequest {

	return &CreateRuleUsingPOSTBadRequest{}
}

// WithPayload adds the payload to the create rule using p o s t bad request response
func (o *CreateRuleUsingPOSTBadRequest) WithPayload(payload *models.APIErrorFacade) *CreateRuleUsingPOSTBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create rule using p o s t bad request response
func (o *CreateRuleUsingPOSTBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRuleUsingPOSTBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRuleUsingPOSTUnauthorizedCode is the HTTP code returned for type CreateRuleUsingPOSTUnauthorized
const CreateRuleUsingPOSTUnauthorizedCode int = 401

/*CreateRuleUsingPOSTUnauthorized Unauthorized user

swagger:response createRuleUsingPOSTUnauthorized
*/
type CreateRuleUsingPOSTUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewCreateRuleUsingPOSTUnauthorized creates CreateRuleUsingPOSTUnauthorized with default headers values
func NewCreateRuleUsingPOSTUnauthorized() *CreateRuleUsingPOSTUnauthorized {

	return &CreateRuleUsingPOSTUnauthorized{}
}

// WithPayload adds the payload to the create rule using p o s t unauthorized response
func (o *CreateRuleUsingPOSTUnauthorized) WithPayload(payload *models.APIErrorFacade) *CreateRuleUsingPOSTUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create rule using p o s t unauthorized response
func (o *CreateRuleUsingPOSTUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRuleUsingPOSTUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRuleUsingPOSTForbiddenCode is the HTTP code returned for type CreateRuleUsingPOSTForbidden
const CreateRuleUsingPOSTForbiddenCode int = 403

/*CreateRuleUsingPOSTForbidden Forbidden

swagger:response createRuleUsingPOSTForbidden
*/
type CreateRuleUsingPOSTForbidden struct {
}

// NewCreateRuleUsingPOSTForbidden creates CreateRuleUsingPOSTForbidden with default headers values
func NewCreateRuleUsingPOSTForbidden() *CreateRuleUsingPOSTForbidden {

	return &CreateRuleUsingPOSTForbidden{}
}

// WriteResponse to the client
func (o *CreateRuleUsingPOSTForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// CreateRuleUsingPOSTNotFoundCode is the HTTP code returned for type CreateRuleUsingPOSTNotFound
const CreateRuleUsingPOSTNotFoundCode int = 404

/*CreateRuleUsingPOSTNotFound Not Found

swagger:response createRuleUsingPOSTNotFound
*/
type CreateRuleUsingPOSTNotFound struct {
}

// NewCreateRuleUsingPOSTNotFound creates CreateRuleUsingPOSTNotFound with default headers values
func NewCreateRuleUsingPOSTNotFound() *CreateRuleUsingPOSTNotFound {

	return &CreateRuleUsingPOSTNotFound{}
}

// WriteResponse to the client
func (o *CreateRuleUsingPOSTNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
