/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package azure_connector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// DisableConnectorsUsingPATCHOKCode is the HTTP code returned for type DisableConnectorsUsingPATCHOK
const DisableConnectorsUsingPATCHOKCode int = 200

/*DisableConnectorsUsingPATCHOK OK

swagger:response disableConnectorsUsingPATCHOK
*/
type DisableConnectorsUsingPATCHOK struct {

	/*
	  In: Body
	*/
	Payload *models.AckRequest `json:"body,omitempty"`
}

// NewDisableConnectorsUsingPATCHOK creates DisableConnectorsUsingPATCHOK with default headers values
func NewDisableConnectorsUsingPATCHOK() *DisableConnectorsUsingPATCHOK {

	return &DisableConnectorsUsingPATCHOK{}
}

// WithPayload adds the payload to the disable connectors using p a t c h o k response
func (o *DisableConnectorsUsingPATCHOK) WithPayload(payload *models.AckRequest) *DisableConnectorsUsingPATCHOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the disable connectors using p a t c h o k response
func (o *DisableConnectorsUsingPATCHOK) SetPayload(payload *models.AckRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCHOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DisableConnectorsUsingPATCHNoContentCode is the HTTP code returned for type DisableConnectorsUsingPATCHNoContent
const DisableConnectorsUsingPATCHNoContentCode int = 204

/*DisableConnectorsUsingPATCHNoContent No Content

swagger:response disableConnectorsUsingPATCHNoContent
*/
type DisableConnectorsUsingPATCHNoContent struct {
}

// NewDisableConnectorsUsingPATCHNoContent creates DisableConnectorsUsingPATCHNoContent with default headers values
func NewDisableConnectorsUsingPATCHNoContent() *DisableConnectorsUsingPATCHNoContent {

	return &DisableConnectorsUsingPATCHNoContent{}
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCHNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DisableConnectorsUsingPATCHBadRequestCode is the HTTP code returned for type DisableConnectorsUsingPATCHBadRequest
const DisableConnectorsUsingPATCHBadRequestCode int = 400

/*DisableConnectorsUsingPATCHBadRequest Bad Request

swagger:response disableConnectorsUsingPATCHBadRequest
*/
type DisableConnectorsUsingPATCHBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewDisableConnectorsUsingPATCHBadRequest creates DisableConnectorsUsingPATCHBadRequest with default headers values
func NewDisableConnectorsUsingPATCHBadRequest() *DisableConnectorsUsingPATCHBadRequest {

	return &DisableConnectorsUsingPATCHBadRequest{}
}

// WithPayload adds the payload to the disable connectors using p a t c h bad request response
func (o *DisableConnectorsUsingPATCHBadRequest) WithPayload(payload *models.APIErrorFacade) *DisableConnectorsUsingPATCHBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the disable connectors using p a t c h bad request response
func (o *DisableConnectorsUsingPATCHBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCHBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DisableConnectorsUsingPATCHUnauthorizedCode is the HTTP code returned for type DisableConnectorsUsingPATCHUnauthorized
const DisableConnectorsUsingPATCHUnauthorizedCode int = 401

/*DisableConnectorsUsingPATCHUnauthorized Unauthorized user

swagger:response disableConnectorsUsingPATCHUnauthorized
*/
type DisableConnectorsUsingPATCHUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewDisableConnectorsUsingPATCHUnauthorized creates DisableConnectorsUsingPATCHUnauthorized with default headers values
func NewDisableConnectorsUsingPATCHUnauthorized() *DisableConnectorsUsingPATCHUnauthorized {

	return &DisableConnectorsUsingPATCHUnauthorized{}
}

// WithPayload adds the payload to the disable connectors using p a t c h unauthorized response
func (o *DisableConnectorsUsingPATCHUnauthorized) WithPayload(payload *models.APIErrorFacade) *DisableConnectorsUsingPATCHUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the disable connectors using p a t c h unauthorized response
func (o *DisableConnectorsUsingPATCHUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCHUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DisableConnectorsUsingPATCHForbiddenCode is the HTTP code returned for type DisableConnectorsUsingPATCHForbidden
const DisableConnectorsUsingPATCHForbiddenCode int = 403

/*DisableConnectorsUsingPATCHForbidden Forbidden

swagger:response disableConnectorsUsingPATCHForbidden
*/
type DisableConnectorsUsingPATCHForbidden struct {
}

// NewDisableConnectorsUsingPATCHForbidden creates DisableConnectorsUsingPATCHForbidden with default headers values
func NewDisableConnectorsUsingPATCHForbidden() *DisableConnectorsUsingPATCHForbidden {

	return &DisableConnectorsUsingPATCHForbidden{}
}

// WriteResponse to the client
func (o *DisableConnectorsUsingPATCHForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
