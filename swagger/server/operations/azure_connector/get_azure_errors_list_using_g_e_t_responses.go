/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package azure_connector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// GetAzureErrorsListUsingGETOKCode is the HTTP code returned for type GetAzureErrorsListUsingGETOK
const GetAzureErrorsListUsingGETOKCode int = 200

/*GetAzureErrorsListUsingGETOK OK

swagger:response getAzureErrorsListUsingGETOK
*/
type GetAzureErrorsListUsingGETOK struct {

	/*
	  In: Body
	*/
	Payload *models.PageImplAzureConnectorErrorResponse `json:"body,omitempty"`
}

// NewGetAzureErrorsListUsingGETOK creates GetAzureErrorsListUsingGETOK with default headers values
func NewGetAzureErrorsListUsingGETOK() *GetAzureErrorsListUsingGETOK {

	return &GetAzureErrorsListUsingGETOK{}
}

// WithPayload adds the payload to the get azure errors list using g e t o k response
func (o *GetAzureErrorsListUsingGETOK) WithPayload(payload *models.PageImplAzureConnectorErrorResponse) *GetAzureErrorsListUsingGETOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get azure errors list using g e t o k response
func (o *GetAzureErrorsListUsingGETOK) SetPayload(payload *models.PageImplAzureConnectorErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAzureErrorsListUsingGETOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAzureErrorsListUsingGETBadRequestCode is the HTTP code returned for type GetAzureErrorsListUsingGETBadRequest
const GetAzureErrorsListUsingGETBadRequestCode int = 400

/*GetAzureErrorsListUsingGETBadRequest Bad Request

swagger:response getAzureErrorsListUsingGETBadRequest
*/
type GetAzureErrorsListUsingGETBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetAzureErrorsListUsingGETBadRequest creates GetAzureErrorsListUsingGETBadRequest with default headers values
func NewGetAzureErrorsListUsingGETBadRequest() *GetAzureErrorsListUsingGETBadRequest {

	return &GetAzureErrorsListUsingGETBadRequest{}
}

// WithPayload adds the payload to the get azure errors list using g e t bad request response
func (o *GetAzureErrorsListUsingGETBadRequest) WithPayload(payload *models.APIErrorFacade) *GetAzureErrorsListUsingGETBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get azure errors list using g e t bad request response
func (o *GetAzureErrorsListUsingGETBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAzureErrorsListUsingGETBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAzureErrorsListUsingGETUnauthorizedCode is the HTTP code returned for type GetAzureErrorsListUsingGETUnauthorized
const GetAzureErrorsListUsingGETUnauthorizedCode int = 401

/*GetAzureErrorsListUsingGETUnauthorized Unauthorized user

swagger:response getAzureErrorsListUsingGETUnauthorized
*/
type GetAzureErrorsListUsingGETUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetAzureErrorsListUsingGETUnauthorized creates GetAzureErrorsListUsingGETUnauthorized with default headers values
func NewGetAzureErrorsListUsingGETUnauthorized() *GetAzureErrorsListUsingGETUnauthorized {

	return &GetAzureErrorsListUsingGETUnauthorized{}
}

// WithPayload adds the payload to the get azure errors list using g e t unauthorized response
func (o *GetAzureErrorsListUsingGETUnauthorized) WithPayload(payload *models.APIErrorFacade) *GetAzureErrorsListUsingGETUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get azure errors list using g e t unauthorized response
func (o *GetAzureErrorsListUsingGETUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAzureErrorsListUsingGETUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAzureErrorsListUsingGETForbiddenCode is the HTTP code returned for type GetAzureErrorsListUsingGETForbidden
const GetAzureErrorsListUsingGETForbiddenCode int = 403

/*GetAzureErrorsListUsingGETForbidden Forbidden

swagger:response getAzureErrorsListUsingGETForbidden
*/
type GetAzureErrorsListUsingGETForbidden struct {
}

// NewGetAzureErrorsListUsingGETForbidden creates GetAzureErrorsListUsingGETForbidden with default headers values
func NewGetAzureErrorsListUsingGETForbidden() *GetAzureErrorsListUsingGETForbidden {

	return &GetAzureErrorsListUsingGETForbidden{}
}

// WriteResponse to the client
func (o *GetAzureErrorsListUsingGETForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetAzureErrorsListUsingGETNotFoundCode is the HTTP code returned for type GetAzureErrorsListUsingGETNotFound
const GetAzureErrorsListUsingGETNotFoundCode int = 404

/*GetAzureErrorsListUsingGETNotFound Not Found

swagger:response getAzureErrorsListUsingGETNotFound
*/
type GetAzureErrorsListUsingGETNotFound struct {
}

// NewGetAzureErrorsListUsingGETNotFound creates GetAzureErrorsListUsingGETNotFound with default headers values
func NewGetAzureErrorsListUsingGETNotFound() *GetAzureErrorsListUsingGETNotFound {

	return &GetAzureErrorsListUsingGETNotFound{}
}

// WriteResponse to the client
func (o *GetAzureErrorsListUsingGETNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
