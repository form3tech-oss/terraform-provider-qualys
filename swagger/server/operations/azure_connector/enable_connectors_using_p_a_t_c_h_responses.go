/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package azure_connector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// EnableConnectorsUsingPATCHOKCode is the HTTP code returned for type EnableConnectorsUsingPATCHOK
const EnableConnectorsUsingPATCHOKCode int = 200

/*EnableConnectorsUsingPATCHOK OK

swagger:response enableConnectorsUsingPATCHOK
*/
type EnableConnectorsUsingPATCHOK struct {

	/*
	  In: Body
	*/
	Payload *models.AckRequest `json:"body,omitempty"`
}

// NewEnableConnectorsUsingPATCHOK creates EnableConnectorsUsingPATCHOK with default headers values
func NewEnableConnectorsUsingPATCHOK() *EnableConnectorsUsingPATCHOK {

	return &EnableConnectorsUsingPATCHOK{}
}

// WithPayload adds the payload to the enable connectors using p a t c h o k response
func (o *EnableConnectorsUsingPATCHOK) WithPayload(payload *models.AckRequest) *EnableConnectorsUsingPATCHOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the enable connectors using p a t c h o k response
func (o *EnableConnectorsUsingPATCHOK) SetPayload(payload *models.AckRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCHOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EnableConnectorsUsingPATCHNoContentCode is the HTTP code returned for type EnableConnectorsUsingPATCHNoContent
const EnableConnectorsUsingPATCHNoContentCode int = 204

/*EnableConnectorsUsingPATCHNoContent No Content

swagger:response enableConnectorsUsingPATCHNoContent
*/
type EnableConnectorsUsingPATCHNoContent struct {
}

// NewEnableConnectorsUsingPATCHNoContent creates EnableConnectorsUsingPATCHNoContent with default headers values
func NewEnableConnectorsUsingPATCHNoContent() *EnableConnectorsUsingPATCHNoContent {

	return &EnableConnectorsUsingPATCHNoContent{}
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCHNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// EnableConnectorsUsingPATCHBadRequestCode is the HTTP code returned for type EnableConnectorsUsingPATCHBadRequest
const EnableConnectorsUsingPATCHBadRequestCode int = 400

/*EnableConnectorsUsingPATCHBadRequest Bad Request

swagger:response enableConnectorsUsingPATCHBadRequest
*/
type EnableConnectorsUsingPATCHBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewEnableConnectorsUsingPATCHBadRequest creates EnableConnectorsUsingPATCHBadRequest with default headers values
func NewEnableConnectorsUsingPATCHBadRequest() *EnableConnectorsUsingPATCHBadRequest {

	return &EnableConnectorsUsingPATCHBadRequest{}
}

// WithPayload adds the payload to the enable connectors using p a t c h bad request response
func (o *EnableConnectorsUsingPATCHBadRequest) WithPayload(payload *models.APIErrorFacade) *EnableConnectorsUsingPATCHBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the enable connectors using p a t c h bad request response
func (o *EnableConnectorsUsingPATCHBadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCHBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EnableConnectorsUsingPATCHUnauthorizedCode is the HTTP code returned for type EnableConnectorsUsingPATCHUnauthorized
const EnableConnectorsUsingPATCHUnauthorizedCode int = 401

/*EnableConnectorsUsingPATCHUnauthorized Unauthorized user

swagger:response enableConnectorsUsingPATCHUnauthorized
*/
type EnableConnectorsUsingPATCHUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewEnableConnectorsUsingPATCHUnauthorized creates EnableConnectorsUsingPATCHUnauthorized with default headers values
func NewEnableConnectorsUsingPATCHUnauthorized() *EnableConnectorsUsingPATCHUnauthorized {

	return &EnableConnectorsUsingPATCHUnauthorized{}
}

// WithPayload adds the payload to the enable connectors using p a t c h unauthorized response
func (o *EnableConnectorsUsingPATCHUnauthorized) WithPayload(payload *models.APIErrorFacade) *EnableConnectorsUsingPATCHUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the enable connectors using p a t c h unauthorized response
func (o *EnableConnectorsUsingPATCHUnauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCHUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EnableConnectorsUsingPATCHForbiddenCode is the HTTP code returned for type EnableConnectorsUsingPATCHForbidden
const EnableConnectorsUsingPATCHForbiddenCode int = 403

/*EnableConnectorsUsingPATCHForbidden Forbidden

swagger:response enableConnectorsUsingPATCHForbidden
*/
type EnableConnectorsUsingPATCHForbidden struct {
}

// NewEnableConnectorsUsingPATCHForbidden creates EnableConnectorsUsingPATCHForbidden with default headers values
func NewEnableConnectorsUsingPATCHForbidden() *EnableConnectorsUsingPATCHForbidden {

	return &EnableConnectorsUsingPATCHForbidden{}
}

// WriteResponse to the client
func (o *EnableConnectorsUsingPATCHForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}
