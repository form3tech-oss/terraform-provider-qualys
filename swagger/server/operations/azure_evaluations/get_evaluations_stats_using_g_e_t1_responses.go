/* #nosec */ // Code generated by go-swagger; DO NOT EDIT.

package azure_evaluations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/form3tech-oss/terraform-provider-qualys/swagger/models"
)

// GetEvaluationsStatsUsingGET1OKCode is the HTTP code returned for type GetEvaluationsStatsUsingGET1OK
const GetEvaluationsStatsUsingGET1OKCode int = 200

/*GetEvaluationsStatsUsingGET1OK OK

swagger:response getEvaluationsStatsUsingGET1OK
*/
type GetEvaluationsStatsUsingGET1OK struct {

	/*
	  In: Body
	*/
	Payload *models.EvaluationDates `json:"body,omitempty"`
}

// NewGetEvaluationsStatsUsingGET1OK creates GetEvaluationsStatsUsingGET1OK with default headers values
func NewGetEvaluationsStatsUsingGET1OK() *GetEvaluationsStatsUsingGET1OK {

	return &GetEvaluationsStatsUsingGET1OK{}
}

// WithPayload adds the payload to the get evaluations stats using g e t1 o k response
func (o *GetEvaluationsStatsUsingGET1OK) WithPayload(payload *models.EvaluationDates) *GetEvaluationsStatsUsingGET1OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get evaluations stats using g e t1 o k response
func (o *GetEvaluationsStatsUsingGET1OK) SetPayload(payload *models.EvaluationDates) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEvaluationsStatsUsingGET1OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEvaluationsStatsUsingGET1BadRequestCode is the HTTP code returned for type GetEvaluationsStatsUsingGET1BadRequest
const GetEvaluationsStatsUsingGET1BadRequestCode int = 400

/*GetEvaluationsStatsUsingGET1BadRequest Bad Request

swagger:response getEvaluationsStatsUsingGET1BadRequest
*/
type GetEvaluationsStatsUsingGET1BadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetEvaluationsStatsUsingGET1BadRequest creates GetEvaluationsStatsUsingGET1BadRequest with default headers values
func NewGetEvaluationsStatsUsingGET1BadRequest() *GetEvaluationsStatsUsingGET1BadRequest {

	return &GetEvaluationsStatsUsingGET1BadRequest{}
}

// WithPayload adds the payload to the get evaluations stats using g e t1 bad request response
func (o *GetEvaluationsStatsUsingGET1BadRequest) WithPayload(payload *models.APIErrorFacade) *GetEvaluationsStatsUsingGET1BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get evaluations stats using g e t1 bad request response
func (o *GetEvaluationsStatsUsingGET1BadRequest) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEvaluationsStatsUsingGET1BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEvaluationsStatsUsingGET1UnauthorizedCode is the HTTP code returned for type GetEvaluationsStatsUsingGET1Unauthorized
const GetEvaluationsStatsUsingGET1UnauthorizedCode int = 401

/*GetEvaluationsStatsUsingGET1Unauthorized Unauthorized user

swagger:response getEvaluationsStatsUsingGET1Unauthorized
*/
type GetEvaluationsStatsUsingGET1Unauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorFacade `json:"body,omitempty"`
}

// NewGetEvaluationsStatsUsingGET1Unauthorized creates GetEvaluationsStatsUsingGET1Unauthorized with default headers values
func NewGetEvaluationsStatsUsingGET1Unauthorized() *GetEvaluationsStatsUsingGET1Unauthorized {

	return &GetEvaluationsStatsUsingGET1Unauthorized{}
}

// WithPayload adds the payload to the get evaluations stats using g e t1 unauthorized response
func (o *GetEvaluationsStatsUsingGET1Unauthorized) WithPayload(payload *models.APIErrorFacade) *GetEvaluationsStatsUsingGET1Unauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get evaluations stats using g e t1 unauthorized response
func (o *GetEvaluationsStatsUsingGET1Unauthorized) SetPayload(payload *models.APIErrorFacade) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEvaluationsStatsUsingGET1Unauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEvaluationsStatsUsingGET1ForbiddenCode is the HTTP code returned for type GetEvaluationsStatsUsingGET1Forbidden
const GetEvaluationsStatsUsingGET1ForbiddenCode int = 403

/*GetEvaluationsStatsUsingGET1Forbidden Forbidden

swagger:response getEvaluationsStatsUsingGET1Forbidden
*/
type GetEvaluationsStatsUsingGET1Forbidden struct {
}

// NewGetEvaluationsStatsUsingGET1Forbidden creates GetEvaluationsStatsUsingGET1Forbidden with default headers values
func NewGetEvaluationsStatsUsingGET1Forbidden() *GetEvaluationsStatsUsingGET1Forbidden {

	return &GetEvaluationsStatsUsingGET1Forbidden{}
}

// WriteResponse to the client
func (o *GetEvaluationsStatsUsingGET1Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetEvaluationsStatsUsingGET1NotFoundCode is the HTTP code returned for type GetEvaluationsStatsUsingGET1NotFound
const GetEvaluationsStatsUsingGET1NotFoundCode int = 404

/*GetEvaluationsStatsUsingGET1NotFound Not Found

swagger:response getEvaluationsStatsUsingGET1NotFound
*/
type GetEvaluationsStatsUsingGET1NotFound struct {
}

// NewGetEvaluationsStatsUsingGET1NotFound creates GetEvaluationsStatsUsingGET1NotFound with default headers values
func NewGetEvaluationsStatsUsingGET1NotFound() *GetEvaluationsStatsUsingGET1NotFound {

	return &GetEvaluationsStatsUsingGET1NotFound{}
}

// WriteResponse to the client
func (o *GetEvaluationsStatsUsingGET1NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
